@using Ctf4e.Server.Controllers
@using Ctf4e.Server.Models
@model Ctf4e.Server.Models.Lab
@{
    ViewData["Title"] = "Praktika verwalten";

    var viewType = (AdminLabsController.ViewType)ViewData["ViewType"];
}

@if(viewType == AdminLabsController.ViewType.ListLabs)
{
    var labs = (List<Lab>)ViewData["Labs"];

    <h3 class="text-primary">
        Praktika verwalten
    </h3>
    <hr class="bg-primary" style="height: 2px">

    <a role="button" class="btn btn-sm btn-primary" href="@(Url.Action<AdminLabsController>(nameof(AdminLabsController.ShowCreateLabFormAsync)))">
        <span class="oi oi-plus"></span>
        Praktikum erstellen
    </a>
    <table class="table table-sm table-bordered table-hover text-nowrap mt-2">
        <thead>
        <tr>
            <th scope="col">ID</th>
            <th scope="col">Name</th>
            <th scope="col">Aufgaben</th>
            <th scope="col">Flags</th>
            <th scope="col">Max. Flag-Punkte</th>
            <th scope="col">Aktionen</th>
        </tr>
        </thead>
        <tbody>
        @foreach(var l in labs)
        {
            <tr>
                <td>@l.Id</td>
                <td>@l.Name</td>
                <td>
                    <a href="@(Url.Action<AdminExercisesController>(nameof(AdminExercisesController.RenderExerciseListAsync), new { labId = l.Id }))" title="Aufgabenliste öffnen">
                        <span class="oi oi-list"></span>
                    </a>
                    @l.Exercises.Count
                </td>
                <td>
                    <a href="@(Url.Action<AdminFlagsController>(nameof(AdminFlagsController.RenderFlagListAsync), new { labId = l.Id }))" title="Flagliste öffnen">
                        <span class="oi oi-list"></span>
                    </a>
                    @l.Flags.Count
                </td>
                <td>@l.MaxFlagPoints</td>
                <td>
                    <a role="button" class="btn btn-sm btn-primary" href="@(Url.Action<AdminLabsController>(nameof(AdminLabsController.ShowEditLabFormAsync), new { id = l.Id }))">
                        <span class="oi oi-pencil"></span>
                        Bearbeiten
                    </a>
                    @if(!l.Executions.Any())
                    {
                        <a role="button" class="btn btn-sm btn-danger" href="#" data-toggle="modal" data-target="#modal-delete-lab" data-lab-id="@l.Id" data-lab-name="@l.Name">
                            <span class="oi oi-trash"></span>
                            Löschen
                        </a>
                    }
                </td>
            </tr>
        }
        </tbody>
    </table>

    <div class="modal fade" id="modal-delete-lab" tabindex="-1" role="dialog">
        <div class="modal-dialog" role="document">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title">Praktikum löschen</h5>
                    <button type="button" class="close" data-dismiss="modal">
                        <span>&times;</span>
                    </button>
                </div>
                <div class="modal-body">
                    <p>
                        Wollen Sie das Praktikum &quot;<span data-replace="lab-name"></span>&quot; wirklich löschen?
                    </p>
                    <p>
                        Beachten Sie, dass hierbei auch alle damit zusammenhängenden Aufgaben und Flags unwiderruflich gelöscht werden!
                    </p>
                </div>
                <div class="modal-footer">
                    <form action="@(Url.Action<AdminLabsController>(nameof(AdminLabsController.DeleteLabAsync)))" method="post">
                        <input type="hidden" data-replace="lab-id" name="id" value="">
                        @Html.AntiForgeryToken()
                        <button type="submit" class="btn btn-outline-danger">Praktikum löschen</button>
                        <button type="button" class="btn btn-secondary" data-dismiss="modal">Abbrechen</button>
                    </form>
                </div>
            </div>
        </div>
    </div>
    <script>
        $('#modal-delete-lab').on('show.bs.modal', function (e) {
            var labId = $(e.relatedTarget).data('lab-id');
            var labName = $(e.relatedTarget).data('lab-name');
            $(e.currentTarget).find('span[data-replace="lab-name"]').text(labName);
            $(e.currentTarget).find('input[data-replace="lab-id"]').val(labId);
        });
    </script>
}
else if(viewType == AdminLabsController.ViewType.EditLab)
{
    <h3 class="text-primary">
        Praktikum bearbeiten
    </h3>
    <hr class="bg-primary" style="height: 2px">
    <form action="@(Url.Action<AdminLabsController>(nameof(AdminLabsController.EditLabAsync), new { id = Model.Id }))" method="post">
        <div class="form-group">
            <label asp-for="Name">Name</label>
            <input asp-for="Name" class="form-control" placeholder="Namen eingeben">
            <span asp-validation-for="Name" class="text-danger"></span>
        </div>
        <div class="form-group">
            <label asp-for="ServerBaseUrl">Basis-URL für Praktikumsserver</label>
            <input asp-for="ServerBaseUrl" class="form-control" placeholder="URL eingeben">
            <span asp-validation-for="ServerBaseUrl" class="text-danger"></span>
        </div>
        <div class="form-group">
            <label asp-for="ApiCode">API-Code</label>
            <input asp-for="ApiCode" class="form-control" placeholder="Code eingeben">
            <span asp-validation-for="ApiCode" class="text-danger"></span>
        </div>
        <div class="form-group">
            <label asp-for="MaxFlagPoints">Maximale Flagpunkte</label>
            <input asp-for="MaxFlagPoints" class="form-control">
            <span asp-validation-for="MaxFlagPoints" class="text-danger"></span>
        </div>
        @if(Model.Exercises?.Any() == true)
        {
            <div class="form-group">
                <label>Aufgaben</label>
                <table class="table table-sm table-bordered table-hover text-nowrap">
                    <tbody>
                    @foreach(var e in Model.Exercises)
                    {
                        <tr>
                            <td>@e.Name (#@e.Id / Nr. @e.ExerciseNumber)</td>
                            <td>
                                <a role="button" class="btn btn-sm btn-primary" href="@(Url.Action<AdminExercisesController>(nameof(AdminExercisesController.ShowEditExerciseFormAsync), new { id = e.Id }))">
                                    <span class="oi oi-pencil"></span>
                                    Bearbeiten
                                </a>
                            </td>
                        </tr>
                    }
                    </tbody>
                </table>
            </div>
        }
        @if(Model.Flags?.Any() == true)
        {
            <div class="form-group">
                <label>Flags</label>
                <table class="table table-sm table-bordered table-hover text-nowrap">
                    <tbody>
                    @foreach(var f in Model.Flags)
                    {
                        <tr>
                            <td>@f.Description (#@f.Id)</td>
                            <td>
                                <a role="button" class="btn btn-sm btn-primary" href="@(Url.Action<AdminFlagsController>(nameof(AdminFlagsController.ShowEditFlagFormAsync), new { id = f.Id }))">
                                    <span class="oi oi-pencil"></span>
                                    Bearbeiten
                                </a>
                            </td>
                        </tr>
                    }
                    </tbody>
                </table>
            </div>
        }

        @Html.AntiForgeryToken()
        <button type="submit" class="btn btn-primary">Änderungen speichern</button>
    </form>
}
else if(viewType == AdminLabsController.ViewType.CreateLab)
{
    <h3 class="text-primary">
        Praktikum erstellen
    </h3>
    <hr class="bg-primary" style="height: 2px">
    <form action="@(Url.Action<AdminLabsController>(nameof(AdminLabsController.CreateLabAsync)))" method="post">
        <div class="form-group">
            <label asp-for="Name">Name</label>
            <input asp-for="Name" class="form-control" placeholder="Namen eingeben">
            <span asp-validation-for="Name" class="text-danger"></span>
        </div>
        <div class="form-group">
            <label asp-for="ServerBaseUrl">Basis-URL für Praktikumsserver</label>
            <input asp-for="ServerBaseUrl" class="form-control" placeholder="URL eingeben">
            <span asp-validation-for="ServerBaseUrl" class="text-danger"></span>
        </div>
        <div class="form-group">
            <label asp-for="ApiCode">API-Code</label>
            <input asp-for="ApiCode" class="form-control" placeholder="Code eingeben" value="@RandomStringGenerator.GetRandomString(32)">
            <span asp-validation-for="ApiCode" class="text-danger"></span>
        </div>
        <div class="form-group">
            <label asp-for="MaxFlagPoints">Maximale Flagpunkte</label>
            <input asp-for="MaxFlagPoints" class="form-control">
            <span asp-validation-for="MaxFlagPoints" class="text-danger"></span>
        </div>

        @Html.AntiForgeryToken()
        <button type="submit" class="btn btn-primary">Praktikum erstellen</button>
    </form>
}