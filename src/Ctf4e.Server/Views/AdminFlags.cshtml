@using Ctf4e.Server.Controllers
@using Ctf4e.Server.Models
@model Ctf4e.Server.Models.Flag
@{
    ViewData["Title"] = "Flags verwalten";

    var viewType = (AdminFlagsController.ViewType)ViewData["ViewType"];
    var lab = (Lab)ViewData["Lab"];
}

@if(viewType == AdminFlagsController.ViewType.ListFlags)
{
    var flags = (List<Flag>)ViewData["Flags"];

    <h3 class="text-primary">
        Flags von Praktikum &quot;@lab.Name&quot; verwalten
    </h3>
    <hr class="bg-primary" style="height: 2px">

    <a role="button" class="btn btn-sm btn-primary" href="@(Url.Action<AdminFlagsController>(nameof(AdminFlagsController.ShowCreateFlagFormAsync), new { labId = lab.Id }))">
        <span class="oi oi-plus"></span>
        Flag erstellen
    </a>
    <table class="table table-sm table-bordered table-hover text-nowrap mt-2">
        <thead>
        <tr>
            <th scope="col">ID</th>
            <th scope="col">Code</th>
            <th scope="col">Beschreibung</th>
            <th scope="col">Basispunktzahl</th>
            <th scope="col">Bug-Bounty?</th>
            <th scope="col">Aktionen</th>
        </tr>
        </thead>
        <tbody>
        @foreach(var f in flags)
        {
            <tr>
                <td>@f.Id</td>
                <td>@f.Code</td>
                <td>@f.Description</td>
                <td>@f.BasePoints</td>
                <td>
                    @if(f.IsBounty)
                    {
                        <span class="oi oi-check text-success"></span>
                    }
                    else
                    {
                        <span class="oi oi-x text-danger"></span>
                    }
                </td>
                <td>
                    <a role="button" class="btn btn-sm btn-primary" href="@(Url.Action<AdminFlagsController>(nameof(AdminFlagsController.ShowEditFlagFormAsync), new { id = f.Id }))">
                        <span class="oi oi-pencil"></span>
                        Bearbeiten
                    </a>
                    <a role="button" class="btn btn-sm btn-danger" href="#" data-toggle="modal" data-target="#modal-delete-flag" data-flag-id="@f.Id" data-flag-name="@f.Description">
                        <span class="oi oi-trash"></span>
                        Löschen
                    </a>
                </td>
            </tr>
        }
        </tbody>
    </table>

    <div class="modal fade" id="modal-delete-flag" tabindex="-1" role="dialog">
        <div class="modal-dialog" role="document">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title">Flag löschen</h5>
                    <button type="button" class="close" data-dismiss="modal">
                        <span>&times;</span>
                    </button>
                </div>
                <div class="modal-body">
                    <p>
                        Wollen Sie die Flag mit der Beschreibung &quot;<span data-replace="flag-name"></span>&quot; wirklich löschen?
                    </p>
                    <p>
                        Beachten Sie, dass hierbei auch alle Flag-Fünde unwiderruflich gelöscht werden!
                    </p>
                </div>
                <div class="modal-footer">
                    <form action="@(Url.Action<AdminFlagsController>(nameof(AdminFlagsController.DeleteFlagAsync)))" method="post">
                        <input type="hidden" data-replace="flag-id" name="id" value="">
                        @Html.AntiForgeryToken()
                        <button type="submit" class="btn btn-outline-danger">Flag löschen</button>
                        <button type="button" class="btn btn-secondary" data-dismiss="modal">Abbrechen</button>
                    </form>
                </div>
            </div>
        </div>
    </div>
    <script>
        $('#modal-delete-flag').on('show.bs.modal', function (e) {
            var flagId = $(e.relatedTarget).data('flag-id');
            var flagName = $(e.relatedTarget).data('flag-name');
            $(e.currentTarget).find('span[data-replace="flag-name"]').text(flagName);
            $(e.currentTarget).find('input[data-replace="flag-id"]').val(flagId);
        });
    </script>
}
else if(viewType == AdminFlagsController.ViewType.EditFlag)
{
    <h3 class="text-primary">
        Flag bearbeiten
    </h3>
    <hr class="bg-primary" style="height: 2px">
    <form action="@(Url.Action<AdminFlagsController>(nameof(AdminFlagsController.EditFlagAsync), new { id = Model.Id }))" method="post">
        <div class="form-group">
            <label asp-for="Code">Flag-Code</label>
            <input asp-for="Code" class="form-control">
            <span asp-validation-for="Code" class="text-danger"></span>
            <small class="form-text text-muted">
                Flags müssen immer dem Format &quot;CTF{&lt;flag code&gt;}&quot; entsprechen, wenn die Gruppen diese selbst einlösen können sollen.
            </small>
        </div>
        <div class="form-group">
            <label asp-for="Description">Beschreibung</label>
            <input asp-for="Description" class="form-control" placeholder="Namen eingeben">
            <span asp-validation-for="Description" class="text-danger"></span>
        </div>
        <div class="form-group">
            <label asp-for="BasePoints">Basispunktzahl</label>
            <input asp-for="BasePoints" class="form-control">
            <span asp-validation-for="BasePoints" class="text-danger"></span>
        </div>
        <div class="form-group">
            <div class="form-check">
                <input asp-for="IsBounty" class="form-check-input">
                <label asp-for="IsBounty" class="form-check-label">Bug-Bounty?</label>
                <small class="form-text text-muted">
                    Bug-Bounty-Flags werden nicht skaliert, sondern ergeben unabhängig von der Anzahl der Einlösungen immer dieselbe Punktzahl.
                </small>
            </div>
        </div>

        <input asp-for="LabId" type="hidden">
        @Html.AntiForgeryToken()
        <button type="submit" class="btn btn-primary">Änderungen speichern</button>
    </form>
}
else if(viewType == AdminFlagsController.ViewType.CreateFlag)
{
    <h3 class="text-primary">
        Flag erstellen
    </h3>
    <hr class="bg-primary" style="height: 2px">
    <form action="@(Url.Action<AdminFlagsController>(nameof(AdminFlagsController.CreateFlagAsync)))" method="post">
        <div class="form-group">
            <label asp-for="Code">Flag-Code</label>
            <input asp-for="Code" class="form-control" placeholder="Flag-Code eingeben" value="CTF{1n5er7-f14g-c0de-here-@RandomStringGenerator.GetRandomString(6)}">
            <span asp-validation-for="Code" class="text-danger"></span>
            <small class="form-text text-muted">
                Flags müssen immer dem Format &quot;CTF{&lt;flag code&gt;}&quot; entsprechen, wenn die Gruppen diese selbst einlösen können sollen.
            </small>
        </div>
        <div class="form-group">
            <label asp-for="Description">Beschreibung</label>
            <input asp-for="Description" class="form-control" placeholder="Namen eingeben">
            <span asp-validation-for="Description" class="text-danger"></span>
        </div>
        <div class="form-group">
            <label asp-for="BasePoints">Basispunktzahl</label>
            <input asp-for="BasePoints" class="form-control">
            <span asp-validation-for="BasePoints" class="text-danger"></span>
        </div>
        <div class="form-group">
            <div class="form-check">
                <input asp-for="IsBounty" class="form-check-input">
                <label asp-for="IsBounty" class="form-check-label">Bug-Bounty?</label>
                <small class="form-text text-muted">
                    Bug-Bounty-Flags werden nicht skaliert, sondern ergeben unabhängig von der Anzahl der Einlösungen immer dieselbe Punktzahl.
                </small>
            </div>
        </div>

        <input asp-for="LabId" type="hidden" value="@lab.Id">
        @Html.AntiForgeryToken()
        <button type="submit" class="btn btn-primary">Flag erstellen</button>
    </form>
}