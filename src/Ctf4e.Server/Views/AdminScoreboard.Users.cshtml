@using Ctf4e.Server.Models
@using Ctf4e.Server.ViewModels
@using Microsoft.AspNetCore.Mvc.Localization
@model Ctf4e.Server.ViewModels.AdminScoreboard
@inject IViewLocalizer Localizer
@{
    var currentUser = (User)ViewData["CurrentUser"];
}

@foreach(var user in Model.UserEntries)
{
    <div class="card mb-1">
    <div class="card-header container" id="user@(user.UserId)-card-heading" style="cursor: pointer" data-bs-toggle="collapse" data-bs-target="#user@(user.UserId)-card">
        <div class="row">
            <div class="col">
                @if(user.HasPassed)
                {
                    <i class="bi bi-check-circle-fill text-success" title="@Localizer["Passed"]"></i>
                }
                else
                {
                    <i class="bi bi-x-circle-fill text-danger" title="@Localizer["NotPassed"]"></i>
                }
                <span class="ms-2">@user.UserName</span>
            </div>
            <div class="col-auto ms-auto">
                @if(user.Status == ScoreboardGroupStatus.BeforePreStart)
                {
                    <span class="badge bg-info" title="@Localizer["LabExecutionStatus:BeforePreStart:Text"]">@Localizer["LabExecutionStatus:BeforePreStart:Title"]</span>
                }
                else if(user.Status == ScoreboardGroupStatus.PreStart)
                {
                    <span class="badge bg-warning" title="@Localizer["LabExecutionStatus:PreStart:Text"]">@Localizer["LabExecutionStatus:PreStart:Title"]</span>
                }
                else if(user.Status == ScoreboardGroupStatus.Start)
                {
                    <span class="badge bg-warning" title="@Localizer["LabExecutionStatus:Start:Text"]">@Localizer["LabExecutionStatus:Start:Title"]</span>
                }
                else if(user.Status == ScoreboardGroupStatus.End)
                {
                    <span class="badge bg-success" title="@Localizer["LabExecutionStatus:End:Text"]">@Localizer["LabExecutionStatus:End:Title"]</span>
                }
                else if(user.Status == ScoreboardGroupStatus.Undefined)
                {
                    <span class="badge bg-danger" title="@Localizer["LabExecutionStatus:Undefined:Text"]">@Localizer["LabExecutionStatus:Undefined:Title"]</span>
                }
                <span class="badge bg-primary" title="@Localizer["Statistics:MandatoryExercises"]">@user.PassedMandatoryExercisesCount / @Model.MandatoryExercisesCount</span>
                <span class="badge bg-secondary" title="@Localizer["Statistics:OptionalExercises"]">@user.PassedOptionalExercisesCount / @Model.OptionalExercisesCount</span>
                <span class="badge bg-info" title="@Localizer["Statistics:FoundFlags"]">@user.FoundFlagsCount / @Model.FlagCount</span>
            </div>
        </div>
    </div>
    <div id="user@(user.UserId)-card" class="collapse">
        <div class="card-body">
            <a class="btn btn-primary mb-3" asp-controller="AdminScoreboard" asp-action="CallLabServer" asp-route-labId="@Model.LabId" asp-route-userId="@user.UserId" target="_blank">
                <i class="bi bi-arrow-return-right"></i>
                <i class="bi bi-hdd-network"></i>
                @Localizer["LabServerButtonText"]
            </a>

            @foreach(var exercise in user.Exercises)
            {
                <div class="card mb-2">
                    <div class="card-header container">
                        <div class="row">
                            <div class="col">
                                @exercise.Exercise.Name
                                @if(exercise.Exercise.IsMandatory)
                                {
                                    <span class="badge bg-info">@Localizer["Mandatory"]</span>
                                }
                            </div>
                            <div class="col-auto ms-auto">
                                <span class="badge bg-light" title="@Localizer["Exercises:Tries:Text"]">@Localizer["Exercises:Tries:Value", exercise.ValidTries, exercise.Tries]</span>
                                @if(exercise.Passed)
                                {
                                    <span class="badge bg-primary">@Localizer["Points", exercise.Points]</span>
                                    <i class="bi bi-check-circle-fill text-success" title="@Localizer["Solved"]"></i>
                                }
                                else
                                {
                                    <i class="bi bi-x-circle-fill text-danger" title="@Localizer["NotSolved"]"></i>
                                }
                            </div>
                        </div>
                    </div>
                    <div class="card-body">
                        <table class="table table-sm align-middle">
                            <thead>
                            <tr>
                                <th><input type="checkbox" class="form-check-input" name="es-checkbox-select-all"></th>
                                <th></th>
                                <th scope="col">@Localizer["ExerciseSubmissions:Solved"]</th>
                                <th scope="col">@Localizer["ExerciseSubmissions:Timestamp"]</th>
                                <th scope="col">@Localizer["ExerciseSubmissions:Weight"]</th>
                                @if(Model.PassAsGroup)
                                {
                                    <th scope="col">@Localizer["ExerciseSubmissions:SubmittedBy"]</th>
                                }
                                @if(currentUser.IsAdmin)
                                {
                                    <th>
                                        <a role="button" class="btn btn-sm btn-primary" href="#" data-bs-toggle="modal" data-bs-target="#modal-add-exercise-submission" data-exerciseid="@exercise.Exercise.Id" data-userid="@user.UserId">
                                            <i class="bi bi-plus"></i>
                                            @Localizer["Add"]
                                        </a>
                                    </th>
                                }
                            </tr>
                            </thead>
                            <tbody>
                            @foreach(var submission in exercise.Submissions)
                            {
                                <tr>
                                    <td>
                                        <input type="checkbox" class="form-check-input" name="es-checkbox" value="@submission.Id">
                                    </td>
                                    <th scope="row">#@submission.Id</th>
                                    <td>
                                        @if(submission.ExercisePassed)
                                        {
                                            <i class="bi bi-check-circle-fill text-success"></i>
                                        }
                                        else
                                        {
                                            <i class="bi bi-x-circle-fill text-danger"></i>
                                        }
                                    </td>
                                    <td>
                                        @submission.SubmissionTime.ToString("G")
                                    </td>
                                    <td>
                                        @submission.Weight
                                    </td>
                                    @if(Model.PassAsGroup)
                                    {
                                        <td>
                                            @Model.UserNames[submission.UserId]
                                        </td>
                                    }
                                    @if(currentUser.IsAdmin)
                                    {
                                        <td>
                                            <a role="button" class="btn btn-sm btn-danger" href="#" data-bs-toggle="modal" data-bs-target="#modal-delete-exercise-submission" data-submissionid="@submission.Id" data-exercisename="@exercise.Exercise.Name" data-username="@user.UserName">
                                                <i class="bi bi-trash"></i>
                                                @Localizer["Delete"]
                                            </a>
                                        </td>
                                    }
                                </tr>
                            }
                            </tbody>
                        </table>
                    </div>
                </div>
            }

            <table class="table table-sm mt-3">
                <thead>
                <tr>
                    <th>@Localizer["Flags:Flag"]</th>
                    <th scope="col">@Localizer["Flags:Description"]</th>
                    <th scope="col">@Localizer["Flags:Submitted"]</th>
                    <th scope="col">@Localizer["Flags:Valid"]</th>
                    @if(currentUser.IsAdmin)
                    {
                        <th scope="col">@Localizer["Flags:Actions"]</th>
                    }
                </tr>
                </thead>
                <tbody>
                @foreach(var flag in user.Flags)
                {
                    <tr>
                        <th scope="row">#@flag.Flag.Id</th>
                        <td>
                            @flag.Flag.Description
                            @if(flag.Flag.IsBounty)
                            {
                                <i class="bi bi-bug-fill text-primary" title="@Localizer["BugBounty"]"></i>
                            }
                        </td>
                        <td>
                            @if(flag.Submitted)
                            {
                                <i class="bi bi-check-circle-fill text-success" title="@flag.SubmissionTime.ToString("G")"></i>
                            }
                        </td>
                        <td>
                            @if(flag.Submitted)
                            {
                                if(flag.Valid)
                                {
                                    <i class="bi bi-check-circle-fill text-success"></i>
                                    <span class="badge bg-primary">@Localizer["Points", flag.CurrentPoints]</span>
                                }
                                else
                                {
                                    <i class="bi bi-x-circle-fill text-danger"></i>
                                }
                            }
                        </td>
                        @if(currentUser.IsAdmin)
                        {
                            <td>
                                @if(flag.Submitted)
                                {
                                    <a role="button" class="btn btn-sm btn-danger" href="#" data-bs-toggle="modal" data-bs-target="#modal-delete-flag-submission" data-flagid="@flag.Flag.Id" data-userid="@user.UserId" data-username="@user.UserName">
                                        <i class="bi bi-trash"></i>
                                        @Localizer["Reset"]
                                    </a>
                                }
                                else
                                {
                                    <a role="button" class="btn btn-sm btn-success" href="#" data-bs-toggle="modal" data-bs-target="#modal-add-flag-submission" data-flagid="@flag.Flag.Id" data-userid="@user.UserId">
                                        <i class="bi bi-flag-fill"></i>
                                        @Localizer["Submit"]
                                    </a>
                                }
                            </td>
                        }
                    </tr>
                }
                </tbody>
            </table>
        </div>
    </div>
    </div>
}

<a role="button" class="btn btn-sm btn-danger" href="#" data-bs-toggle="modal" data-bs-target="#modal-delete-exercise-submissions">
    <i class="bi bi-trash"></i>
    @Localizer["DeleteSelected"]
</a>

<!-- Exercise and Flag submission modals -->
<div class="modal fade" id="modal-delete-exercise-submission" tabindex="-1" role="dialog">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">@Localizer["Modal:DeleteExerciseSubmission:Title"]</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <p>
                    @Localizer["Modal:DeleteExerciseSubmission:Body"]
                </p>
            </div>
            <div class="modal-footer">
                <form asp-controller="AdminScoreboard" asp-action="DeleteExerciseSubmission" asp-route-labId="@Model.LabId" asp-route-slotId="@Model.SlotId" method="post">
                    <input type="hidden" data-replace="submission-id" name="submissionId" value="">

                    <button type="submit" class="btn btn-outline-danger">@Localizer["Modal:DeleteExerciseSubmission:Submit"]</button>
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">@Localizer["Cancel"]</button>
                </form>
            </div>
        </div>
    </div>
</div>
<div class="modal fade" id="modal-delete-exercise-submissions" tabindex="-1" role="dialog">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">@Localizer["Modal:DeleteExerciseSubmissions:Title"]</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <p>
                    @Localizer["Modal:DeleteExerciseSubmissions:Body"]
                </p>
            </div>
            <div class="modal-footer">
                <form asp-controller="AdminScoreboard" asp-action="DeleteExerciseSubmissions" asp-route-labId="@Model.LabId" asp-route-slotId="@Model.SlotId" method="post">
                    <div id="modal-delete-exercise-submissions-inputlist"></div>

                    <button type="submit" class="btn btn-outline-danger">@Localizer["Modal:DeleteExerciseSubmissions:Submit"]</button>
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">@Localizer["Cancel"]</button>
                </form>
            </div>
        </div>
    </div>
</div>
<div class="modal fade" id="modal-add-exercise-submission" tabindex="-1" role="dialog">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <form asp-controller="AdminScoreboard" asp-action="CreateExerciseSubmission" asp-route-labId="@Model.LabId" asp-route-slotId="@Model.SlotId" method="post">
                <div class="modal-header">
                    <h5 class="modal-title">@Localizer["Modal:CreateExerciseSubmission:Title"]</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>
                <div class="modal-body">
                    <div class="mb-3">
                        <label class="form-label" for="input-add-exercise-submission-time">@Localizer["Modal:CreateExerciseSubmission:Timestamp"]</label>
                        <input id="input-add-exercise-submission-time" name="submissionTime" type="text" class="form-control" value="@DateTime.Now.ToString(DateTimeFormats.DateAndTimeSeconds)" />
                    </div>
                    <div class="mb-3">
                        <label class="form-label" for="input-add-exercise-submission-weight">@Localizer["Modal:CreateExerciseSubmission:Weight"]</label>
                        <input id="input-add-exercise-submission-weight" name="weight" type="number" min="0" value="1" class="form-control" />
                    </div>
                    <div class="mb-3">
                        <div class="form-check">
                            <input id="input-add-exercise-submission-passed" type="checkbox" name="passed" class="form-check-input" checked value="true">
                            <label for="input-add-exercise-submission-passed" class="form-check-label">@Localizer["Passed"]</label>
                        </div>
                    </div>
                </div>
                <div class="modal-footer">
                    <input type="hidden" data-replace="exercise-id" name="exerciseId" value="">
                    <input type="hidden" data-replace="user-id" name="userId" value="">

                    <button type="submit" class="btn btn-outline-primary">@Localizer["Modal:CreateExerciseSubmission:Submit"]</button>
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">@Localizer["Cancel"]</button>
                </div>
            </form>
        </div>
    </div>
</div>
<div class="modal fade" id="modal-delete-flag-submission" tabindex="-1" role="dialog">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">@Localizer["Modal:DeleteFlagSubmission:Title"]</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <p>
                    @Localizer["Modal:DeleteFlagSubmission:Body"]
                </p>
            </div>
            <div class="modal-footer">
                <form asp-controller="AdminScoreboard" asp-action="DeleteFlagSubmission" asp-route-labId="@Model.LabId" asp-route-slotId="@Model.SlotId" method="post">
                    <input type="hidden" data-replace="user-id" name="userId" value="">
                    <input type="hidden" data-replace="flag-id" name="flagId" value="">

                    <button type="submit" class="btn btn-outline-danger">@Localizer["Modal:DeleteFlagSubmission:Submit"]</button>
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">@Localizer["Cancel"]</button>
                </form>
            </div>
        </div>
    </div>
</div>
<div class="modal fade" id="modal-add-flag-submission" tabindex="-1" role="dialog">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <form asp-controller="AdminScoreboard" asp-action="CreateFlagSubmission" asp-route-labId="@Model.LabId" asp-route-slotId="@Model.SlotId" method="post">
                <div class="modal-header">
                    <h5 class="modal-title">@Localizer["Modal:CreateFlagSubmission:Title"]</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>
                <div class="modal-body">
                    <div class="mb-3">
                        <label class="form-label" for="input-add-flag-submission-time">@Localizer["Modal:CreateFlagSubmission:Timestamp"]</label>
                        <input id="input-add-flag-submission-time" name="submissionTime" type="text" class="form-control" value="@DateTime.Now.ToString(DateTimeFormats.DateAndTimeSeconds)" />
                    </div>
                </div>
                <div class="modal-footer">
                    <input type="hidden" data-replace="user-id" name="userId" value="">
                    <input type="hidden" data-replace="flag-id" name="flagId" value="">

                    <button type="submit" class="btn btn-outline-primary">@Localizer["Modal:CreateFlagSubmission:Submit"]</button>
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">@Localizer["Cancel"]</button>
                </div>
            </form>
        </div>
    </div>
</div>

<script>
// Date time picker
flatpickr.localize(flatpickr.l10ns.de);                               
options = {
             "dateFormat": "d.m.Y H:i:S",
             "enableTime": true,
             "enableSeconds": true,
             "allowInput": true,
             "minuteIncrement": 1
         };
flatpickr(document.getElementById("input-add-exercise-submission-time"), options);
flatpickr(document.getElementById("input-add-flag-submission-time"), options);

// "Select all" checkboxes
let selectAllCheckboxes = document.querySelectorAll('input[name="es-checkbox-select-all"]');
for(let selectAllCheckbox of selectAllCheckboxes)
{
    selectAllCheckbox.addEventListener("change", function(e) {
         let localCheckboxes = selectAllCheckbox.closest("table").querySelectorAll('input[name="es-checkbox"]');
         for(let checkbox of localCheckboxes)
             checkbox.checked = selectAllCheckbox.checked;
    });
}

// Modals
document.getElementById("modal-delete-exercise-submission").addEventListener("show.bs.modal", function(e)
{
    e.target.querySelector('input[data-replace="submission-id"]').value = e.relatedTarget.dataset.submissionid;
    e.target.querySelector('span[data-replace="user-name"]').innerText = e.relatedTarget.dataset.username;
    e.target.querySelector('span[data-replace="exercise-name"]').innerText = e.relatedTarget.dataset.exercisename;
});
document.getElementById("modal-delete-exercise-submissions").addEventListener("show.bs.modal", function(e)
{
    // Clear list of <input> elements
    let inputDiv = document.getElementById("modal-delete-exercise-submissions-inputlist");
    inputDiv.innerHTML = "";
    
    // Add <input> for each checked exercise submission checkbox
    let checked = document.querySelectorAll('input[name=es-checkbox]:checked');
    let inputPrototype = document.createElement("input");
    inputPrototype.setAttribute("type", "hidden");
    inputPrototype.setAttribute("name", "submissionIds");
    for(let checkbox of checked)
    {
        inputPrototype.setAttribute("value", checkbox.value);
        inputDiv.appendChild(inputPrototype.cloneNode(true));
    }
});
document.getElementById("modal-add-exercise-submission").addEventListener("show.bs.modal", function(e)
{
    e.target.querySelector('input[data-replace="exercise-id"]').value = e.relatedTarget.dataset.exerciseid;
    e.target.querySelector('input[data-replace="user-id"]').value = e.relatedTarget.dataset.userid;
});
document.getElementById("modal-delete-flag-submission").addEventListener("show.bs.modal", function(e)
{
    e.target.querySelector('input[data-replace="flag-id"]').value = e.relatedTarget.dataset.flagid;
    e.target.querySelector('input[data-replace="user-id"]').value = e.relatedTarget.dataset.userid;
    e.target.querySelector('span[data-replace="user-name"]').innerText = e.relatedTarget.dataset.username;
});
document.getElementById("modal-add-flag-submission").addEventListener("show.bs.modal", function(e)
{
    e.target.querySelector('input[data-replace="flag-id"]').value = e.relatedTarget.dataset.flagid;
    e.target.querySelector('input[data-replace="user-id"]').value = e.relatedTarget.dataset.userid;
});
</script>