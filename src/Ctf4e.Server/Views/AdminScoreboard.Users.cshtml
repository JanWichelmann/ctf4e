@using Ctf4e.Server.Models
@using Ctf4e.Server.ViewModels
@using Microsoft.AspNetCore.Mvc.Localization
@using Ctf4e.Server.Authorization
@model Ctf4e.Server.ViewModels.AdminScoreboard
@inject IViewLocalizer _localizer
@{
    var currentUser = (User)ViewData["CurrentUser"];
}

@if(Model.GroupMode)
{
    foreach(var group in Model.GroupEntries)
    {
        <div class="card mb-1">
        <div class="card-header container" id="group@(group.GroupId)" style="cursor: pointer" data-bs-toggle="collapse" data-bs-target="#group@(group.GroupId)-card">
            <div class="row">
                <div class="col col-auto collapsible-card-heading collapsed pe-0" data-bs-toggle="collapse" data-bs-target="#group@(group.GroupId)-card"></div>
                <div class="col">
                    @if(group.HasPassed)
                    {
                        <i class="bi bi-check-circle-fill text-success" title="@_localizer["Passed"]"></i>
                    }
                    else
                    {
                        <i class="bi bi-x-circle-fill text-danger" title="@_localizer["NotPassed"]"></i>
                    }
                    <span class="ms-2">@group.GroupName</span>
                </div>
                <div class="col-auto ms-auto">
                    else if(group.Status == ScoreboardGroupStatus.Start)
                    {
                        <span class="badge bg-warning" title="@_localizer["LabExecutionStatus:Start:Text"]">@_localizer["LabExecutionStatus:Start:Title"]</span>
                    }
                    else if(group.Status == ScoreboardGroupStatus.End)
                    {
                        <span class="badge bg-success" title="@_localizer["LabExecutionStatus:End:Text"]">@_localizer["LabExecutionStatus:End:Title"]</span>
                    }
                    else if(group.Status == ScoreboardGroupStatus.Undefined)
                    {
                        <span class="badge bg-danger" title="@_localizer["LabExecutionStatus:Undefined:Text"]">@_localizer["LabExecutionStatus:Undefined:Title"]</span>
                    }
                    <span class="badge bg-primary" title="@_localizer["Statistics:MandatoryExercises"]">@group.PassedMandatoryExercisesCount / @Model.MandatoryExercisesCount</span>
                    <span class="badge bg-secondary" title="@_localizer["Statistics:OptionalExercises"]">@group.PassedOptionalExercisesCount / @Model.OptionalExercisesCount</span>
                    <span class="badge bg-info" title="@_localizer["Statistics:FoundFlags"]">@group.FoundFlagsCount / @Model.FlagCount</span>
                </div>
            </div>
        </div>
        <div id="group@(group.GroupId)-card" class="collapse">
            <div class="card-body">
                <p>
                    <span class="fw-bold">@_localizer["Members"]:</span>
                    @{
                        bool first = true;
                    }
                    @foreach(var userId in group.GroupMembers)
                    {
                        if(first)
                        {
                            first = false;
                        }
                        else
                        {
                            @:/
                        }
                        <a asp-controller="AdminScoreboard" asp-action="RenderScoreboard" asp-route-groupMode="false" asp-route-includeTutors="true" asp-route-labId="@Model.LabId" asp-route-slotId="@Model.SlotId" asp-fragment="@("user" + userId)">@(Model.UserNames[userId])</a>
                    }
                </p>

                @foreach(var exercise in group.Exercises)
                {
                    <div class="card mb-2">
                        <div class="card-header container">
                            <div class="row">
                                <div class="col">
                                    @exercise.Exercise.Name
                                    @if(exercise.Exercise.IsMandatory)
                                    {
                                        <span class="badge bg-info">@_localizer["Mandatory"]</span>
                                    }
                                </div>
                                <div class="col-auto ms-auto">
                                    <span class="badge bg-light text-dark" title="@_localizer["Exercises:Tries:Text"]">@_localizer["Exercises:Tries:Value", exercise.ValidTries, exercise.Tries]</span>
                                    @if(exercise.Passed)
                                    {
                                        <span class="badge bg-primary">@_localizer["Points", exercise.Points]</span>
                                        <i class="bi bi-check-circle-fill text-success" title="@_localizer["Solved"]"></i>
                                    }
                                    else
                                    {
                                        <i class="bi bi-x-circle-fill text-danger" title="@_localizer["NotSolved"]"></i>
                                    }
                                </div>
                            </div>
                        </div>
                        <div class="card-body">
                            <table class="table table-sm align-middle">
                                <thead>
                                <tr>
                                    <th>
                                        <input type="checkbox" class="form-check-input" name="es-checkbox-select-all">
                                    </th>
                                    <th></th>
                                    <th scope="col">@_localizer["ExerciseSubmissions:Solved"]</th>
                                    <th scope="col">@_localizer["ExerciseSubmissions:Timestamp"]</th>
                                    <th scope="col">@_localizer["ExerciseSubmissions:SubmittedBy"]</th>
                                    <th scope="col">@_localizer["ExerciseSubmissions:Weight"]</th>
                                    <th scope="col">@_localizer["ExerciseSubmissions:Points"]</th>
                                    @if(currentUser.Privileges.HasPrivileges(UserPrivileges.EditAdminScoreboard))
                                    {
                                        <th scope="col">@_localizer["ExerciseSubmissions:Actions"]</th>
                                    }
                                </tr>
                                </thead>
                                <tbody class="table-group-divider">
                                @{
                                    bool sawPassedSolution = false;
                                }
                                @foreach(var submission in exercise.Submissions)
                                {
                                    <tr>
                                        <td>
                                            <input type="checkbox" class="form-check-input" name="es-checkbox" value="@submission.Id">
                                        </td>
                                        <th scope="row">#@submission.Id</th>
                                        <td>
                                            @if(submission.ExercisePassed)
                                            {
                                                <i class="bi bi-check-circle-fill text-success"></i>
                                            }
                                            else
                                            {
                                                <i class="bi bi-x-circle-fill text-danger"></i>
                                            }
                                        </td>
                                        <td>
                                            @submission.SubmissionTime.ToString("G")
                                        </td>
                                        <td>
                                            @Model.UserNames[submission.UserId]
                                        </td>
                                        <td>
                                            @submission.Weight
                                        </td>
                                        <td>
                                            @if(!sawPassedSolution)
                                            {
                                                if(submission.ExercisePassed)
                                                {
                                                    <span class="text-success fw-bold">
                                                        +@exercise.Exercise.BasePoints
                                                    </span>
                                                }
                                                else
                                                {
                                                    <span class="text-danger fw-bold">
                                                        &minus;@(submission.Weight * exercise.Exercise.PenaltyPoints)
                                                    </span>
                                                }
                                            }
                                        </td>
                                        @if(currentUser.Privileges.HasPrivileges(UserPrivileges.EditAdminScoreboard))
                                        {
                                            <td>
                                                <a role="button" class="btn btn-sm btn-danger" href="#" data-bs-toggle="modal" data-bs-target="#modal-delete-exercise-submission" data-submissionid="@submission.Id" data-exercisename="@exercise.Exercise.Name" data-username="@Model.UserNames[submission.UserId]">
                                                    <i class="bi bi-trash"></i>
                                                    @_localizer["Delete"]
                                                </a>
                                            </td>
                                        }
                                    </tr>

                                    if(submission.ExercisePassed)
                                    {
                                        sawPassedSolution = true;
                                    }
                                }
                                </tbody>
                            </table>
                        </div>
                    </div>
                }

                <table class="table table-sm mt-3">
                    <thead>
                    <tr>
                        <th>@_localizer["Flags:Flag"]</th>
                        <th scope="col">@_localizer["Flags:Description"]</th>
                        <th scope="col">@_localizer["Flags:Submitted"]</th>
                        <th scope="col">@_localizer["Flags:Valid"]</th>
                    </tr>
                    </thead>
                    <tbody class="table-group-divider">
                    @foreach(var flag in group.Flags)
                    {
                        <tr>
                            <th scope="row">#@flag.Flag.Id</th>
                            <td>
                                @flag.Flag.Description
                                @if(flag.Flag.IsBounty)
                                {
                                    <i class="bi bi-bug-fill text-primary" title="@_localizer["BugBounty"]"></i>
                                }
                            </td>
                            <td>
                                @if(flag.Submitted)
                                {
                                    <i class="bi bi-check-circle-fill text-success" title="@flag.SubmissionTime.ToString("G")"></i>
                                }
                            </td>
                            <td>
                                @if(flag.Submitted)
                                {
                                    if(flag.Valid)
                                    {
                                        <i class="bi bi-check-circle-fill text-success"></i>
                                        <span class="badge bg-primary">@_localizer["Points", flag.CurrentPoints]</span>
                                    }
                                    else
                                    {
                                        <i class="bi bi-x-circle-fill text-danger"></i>
                                    }
                                }
                            </td>
                        </tr>
                    }
                    </tbody>
                </table>
            </div>
        </div>
        </div>
    }

    <script>
        // Automatically show card if specified in URL
        window.addEventListener("load", () => {
            if(window.location.hash === null)
                return;
            
            let cardIdMatch = window.location.hash.match(/^#(group[0-9]+)$/);
            if(cardIdMatch.length === 2)
            {
                let card = document.getElementById(cardIdMatch[1] + "-card");
                if(card)
                   card.classList.add("show");
            }
        });
    </script>
}
else
{
    foreach(var user in Model.UserEntries)
    {
        <div class="card mb-1">
        <div class="card-header container cursor-link collapsed" id="user@(user.UserId)" data-bs-toggle="collapse" data-bs-target="#user@(user.UserId)-card">
            <div class="row">
                <div class="col col-auto collapsible-card-heading collapsed pe-0" data-bs-toggle="collapse" data-bs-target="#user@(user.UserId)-card"></div>
                <div class="col">
                    @if(user.HasPassed)
                    {
                        <i class="bi bi-check-circle-fill text-success" title="@_localizer["Passed"]"></i>
                    }
                    else
                    {
                        <i class="bi bi-x-circle-fill text-danger" title="@_localizer["NotPassed"]"></i>
                    }
                    <span class="ms-2">@user.UserName</span>
                </div>
                <div class="col-auto ms-auto">
                    @if(user.Status == ScoreboardGroupStatus.BeforeStart)
                    {
                        <span class="badge bg-info" title="@_localizer["LabExecutionStatus:BeforeStart:Text"]">@_localizer["LabExecutionStatus:BeforeStart:Title"]</span>
                    }
                    else if(user.Status == ScoreboardGroupStatus.Start)
                    {
                        <span class="badge bg-warning" title="@_localizer["LabExecutionStatus:Start:Text"]">@_localizer["LabExecutionStatus:Start:Title"]</span>
                    }
                    else if(user.Status == ScoreboardGroupStatus.End)
                    {
                        <span class="badge bg-success" title="@_localizer["LabExecutionStatus:End:Text"]">@_localizer["LabExecutionStatus:End:Title"]</span>
                    }
                    else if(user.Status == ScoreboardGroupStatus.Undefined)
                    {
                        <span class="badge bg-danger" title="@_localizer["LabExecutionStatus:Undefined:Text"]">@_localizer["LabExecutionStatus:Undefined:Title"]</span>
                    }
                    <span class="badge bg-primary" title="@_localizer["Statistics:MandatoryExercises"]">@user.PassedMandatoryExercisesCount / @Model.MandatoryExercisesCount</span>
                    <span class="badge bg-secondary" title="@_localizer["Statistics:OptionalExercises"]">@user.PassedOptionalExercisesCount / @Model.OptionalExercisesCount</span>
                    <span class="badge bg-info" title="@_localizer["Statistics:FoundFlags"]">@user.FoundFlagsCount / @Model.FlagCount</span>
                </div>
            </div>
        </div>
        <div id="user@(user.UserId)-card" class="collapse">
            <div class="card-body">
                @if(user.GroupId != null)
                {
                    <p>
                        <span class="fw-bold">@_localizer["Group"]:</span>
                        <a asp-controller="AdminScoreboard" asp-action="RenderScoreboard" asp-route-groupMode="true" asp-route-includeTutors="true" asp-route-labId="@Model.LabId" asp-route-slotId="@Model.SlotId" asp-fragment="@("group" + user.GroupId)">
                            @(Model.GroupNames[user.GroupId!.Value])
                        </a>
                    </p>
                }

                @if(currentUser.Privileges.HasPrivileges(UserPrivileges.LoginAsLabServerAdmin))
                {
                    <a class="btn btn-primary mb-3" asp-controller="AdminScoreboard" asp-action="CallLabServer" asp-route-labId="@Model.LabId" asp-route-userId="@user.UserId" target="_blank">
                        <i class="bi bi-arrow-return-right"></i>
                        <i class="bi bi-hdd-network"></i>
                        @_localizer["LabServerButtonText"]
                    </a>
                }

                @foreach(var exercise in user.Exercises)
                {
                    <div class="card mb-2">
                        <div class="card-header container">
                            <div class="row">
                                <div class="col">
                                    @exercise.Exercise.Name
                                    @if(exercise.Exercise.IsMandatory)
                                    {
                                        <span class="badge bg-info">@_localizer["Mandatory"]</span>
                                    }
                                </div>
                                <div class="col-auto ms-auto">
                                    <span class="badge bg-light text-dark" title="@_localizer["Exercises:Tries:Text"]">@_localizer["Exercises:Tries:Value", exercise.ValidTries, exercise.Tries]</span>
                                    @if(exercise.Passed)
                                    {
                                        // Only show the points if group mode is active
                                        // Else the submission list is lacking the submissions of other group members, rendering the displayed points meaningless
                                        if(Model.PassAsGroup)
                                        {
                                            <span class="badge bg-primary">@_localizer["Points", exercise.Points]</span>
                                        }
                                        <i class="bi bi-check-circle-fill text-success" title="@_localizer["Solved"]"></i>
                                    }
                                    else
                                    {
                                        <i class="bi bi-x-circle-fill text-danger" title="@_localizer["NotSolved"]"></i>
                                    }
                                </div>
                            </div>
                        </div>
                        <div class="card-body">
                            <table class="table table-sm align-middle">
                                <thead>
                                <tr>
                                    <th>
                                        <input type="checkbox" class="form-check-input" name="es-checkbox-select-all">
                                    </th>
                                    <th></th>
                                    <th scope="col">@_localizer["ExerciseSubmissions:Solved"]</th>
                                    <th scope="col">@_localizer["ExerciseSubmissions:Timestamp"]</th>
                                    <th scope="col">@_localizer["ExerciseSubmissions:Weight"]</th>
                                    @if(Model.PassAsGroup)
                                    {
                                        <th scope="col">@_localizer["ExerciseSubmissions:SubmittedBy"]</th>
                                    }
                                    @if(currentUser.Privileges.HasPrivileges(UserPrivileges.EditAdminScoreboard))
                                    {
                                        <th>
                                            <a role="button" class="btn btn-sm btn-primary" href="#" data-bs-toggle="modal" data-bs-target="#modal-add-exercise-submission" data-exerciseid="@exercise.Exercise.Id" data-userid="@user.UserId">
                                                <i class="bi bi-plus"></i>
                                                @_localizer["Add"]
                                            </a>
                                        </th>
                                    }
                                </tr>
                                </thead>
                                <tbody class="table-group-divider">
                                @foreach(var submission in exercise.Submissions)
                                {
                                    <tr>
                                        <td>
                                            <input type="checkbox" class="form-check-input" name="es-checkbox" value="@submission.Id">
                                        </td>
                                        <th scope="row">#@submission.Id</th>
                                        <td>
                                            @if(submission.ExercisePassed)
                                            {
                                                <i class="bi bi-check-circle-fill text-success"></i>
                                            }
                                            else
                                            {
                                                <i class="bi bi-x-circle-fill text-danger"></i>
                                            }
                                        </td>
                                        <td>
                                            @submission.SubmissionTime.ToString("G")
                                        </td>
                                        <td>
                                            @submission.Weight
                                        </td>
                                        @if(Model.PassAsGroup)
                                        {
                                            <td>
                                                @Model.UserNames[submission.UserId]
                                            </td>
                                        }
                                        @if(currentUser.Privileges.HasPrivileges(UserPrivileges.EditAdminScoreboard))
                                        {
                                            <td>
                                                <a role="button" class="btn btn-sm btn-danger" href="#" data-bs-toggle="modal" data-bs-target="#modal-delete-exercise-submission" data-submissionid="@submission.Id" data-exercisename="@exercise.Exercise.Name" data-username="@user.UserName">
                                                    <i class="bi bi-trash"></i>
                                                    @_localizer["Delete"]
                                                </a>
                                            </td>
                                        }
                                    </tr>
                                }
                                </tbody>
                            </table>
                        </div>
                    </div>
                }

                <table class="table table-sm mt-3">
                    <thead>
                    <tr>
                        <th>@_localizer["Flags:Flag"]</th>
                        <th scope="col">@_localizer["Flags:Description"]</th>
                        <th scope="col">@_localizer["Flags:Submitted"]</th>
                        <th scope="col">@_localizer["Flags:Valid"]</th>
                        @if(currentUser.Privileges.HasPrivileges(UserPrivileges.EditAdminScoreboard))
                        {
                            <th scope="col">@_localizer["Flags:Actions"]</th>
                        }
                    </tr>
                    </thead>
                    <tbody class="table-group-divider">
                    @foreach(var flag in user.Flags)
                    {
                        <tr>
                            <th scope="row">#@flag.Flag.Id</th>
                            <td>
                                @flag.Flag.Description
                                @if(flag.Flag.IsBounty)
                                {
                                    <i class="bi bi-bug-fill text-primary" title="@_localizer["BugBounty"]"></i>
                                }
                            </td>
                            <td>
                                @if(flag.Submitted)
                                {
                                    <i class="bi bi-check-circle-fill text-success" title="@flag.SubmissionTime.ToString("G")"></i>
                                }
                            </td>
                            <td>
                                @if(flag.Submitted)
                                {
                                    if(flag.Valid)
                                    {
                                        <i class="bi bi-check-circle-fill text-success"></i>
                                        <span class="badge bg-primary">@_localizer["Points", flag.CurrentPoints]</span>
                                    }
                                    else
                                    {
                                        <i class="bi bi-x-circle-fill text-danger"></i>
                                    }
                                }
                            </td>
                            @if(currentUser.Privileges.HasPrivileges(UserPrivileges.EditAdminScoreboard))
                            {
                                <td>
                                    @if(flag.Submitted)
                                    {
                                        <a role="button" class="btn btn-sm btn-danger" href="#" data-bs-toggle="modal" data-bs-target="#modal-delete-flag-submission" data-flagid="@flag.Flag.Id" data-userid="@user.UserId" data-username="@user.UserName">
                                            <i class="bi bi-trash"></i>
                                            @_localizer["Reset"]
                                        </a>
                                    }
                                    else
                                    {
                                        <a role="button" class="btn btn-sm btn-success" href="#" data-bs-toggle="modal" data-bs-target="#modal-add-flag-submission" data-flagid="@flag.Flag.Id" data-userid="@user.UserId">
                                            <i class="bi bi-flag-fill"></i>
                                            @_localizer["Submit"]
                                        </a>
                                    }
                                </td>
                            }
                        </tr>
                    }
                    </tbody>
                </table>
            </div>
        </div>
        </div>
    }

    <script>
        // Automatically show card if specified in URL
        window.addEventListener("load", () => {
            if(window.location.hash === null)
                return;
            
            let cardIdMatch = window.location.hash.match(/^#(user[0-9]+)$/);
            if(cardIdMatch.length === 2)
            {
                let card = document.getElementById(cardIdMatch[1] + "-card");
                if(card)
                   card.classList.add("show");
            }
        });
    </script>
}

@if(currentUser.Privileges.HasPrivileges(UserPrivileges.EditAdminScoreboard))
{
    <a role="button" class="btn btn-danger" href="#" data-bs-toggle="modal" data-bs-target="#modal-delete-exercise-submissions">
        <i class="bi bi-trash"></i>
        @_localizer["DeleteSelected"]
    </a>
}

<!-- Exercise and Flag submission modals -->
<div class="modal fade" id="modal-delete-exercise-submission" tabindex="-1" role="dialog">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">@_localizer["Modal:DeleteExerciseSubmission:Title"]</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <p>
                    @_localizer["Modal:DeleteExerciseSubmission:Body"]
                </p>
            </div>
            <div class="modal-footer">
                <form asp-controller="AdminScoreboard" asp-action="DeleteExerciseSubmission" asp-route-labId="@Model.LabId" asp-route-slotId="@Model.SlotId" asp-route-groupMode="@Model.GroupMode" asp-route-includeTutors="@Model.IncludeTutors" method="post">
                    <input type="hidden" data-replace="submission-id" name="submissionId" value="">

                    <button type="submit" class="btn btn-outline-danger">@_localizer["Modal:DeleteExerciseSubmission:Submit"]</button>
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">@_localizer["Cancel"]</button>
                </form>
            </div>
        </div>
    </div>
</div>
<div class="modal fade" id="modal-delete-exercise-submissions" tabindex="-1" role="dialog">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">@_localizer["Modal:DeleteExerciseSubmissions:Title"]</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <p>
                    @_localizer["Modal:DeleteExerciseSubmissions:Body"]
                </p>
            </div>
            <div class="modal-footer">
                <form asp-controller="AdminScoreboard" asp-action="DeleteExerciseSubmissions" asp-route-labId="@Model.LabId" asp-route-slotId="@Model.SlotId" asp-route-groupMode="@Model.GroupMode" asp-route-includeTutors="@Model.IncludeTutors" method="post">
                    <div id="modal-delete-exercise-submissions-inputlist"></div>

                    <button type="submit" class="btn btn-outline-danger">@_localizer["Modal:DeleteExerciseSubmissions:Submit"]</button>
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">@_localizer["Cancel"]</button>
                </form>
            </div>
        </div>
    </div>
</div>
<div class="modal fade" id="modal-add-exercise-submission" tabindex="-1" role="dialog">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <form asp-controller="AdminScoreboard" asp-action="CreateExerciseSubmission" asp-route-labId="@Model.LabId" asp-route-slotId="@Model.SlotId" asp-route-groupMode="@Model.GroupMode" asp-route-includeTutors="@Model.IncludeTutors" method="post">
                <div class="modal-header">
                    <h5 class="modal-title">@_localizer["Modal:CreateExerciseSubmission:Title"]</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>
                <div class="modal-body">
                    <div class="mb-3">
                        <label class="form-label" for="input-add-exercise-submission-time">@_localizer["Modal:CreateExerciseSubmission:Timestamp"]</label>
                        <input id="input-add-exercise-submission-time" name="submissionTime" type="text" class="form-control" />
                    </div>
                    <div class="mb-3">
                        <label class="form-label" for="input-add-exercise-submission-weight">@_localizer["Modal:CreateExerciseSubmission:Weight"]</label>
                        <input id="input-add-exercise-submission-weight" name="weight" type="number" min="0" value="1" class="form-control" />
                    </div>
                    <div class="mb-3">
                        <div class="form-check">
                            <input id="input-add-exercise-submission-passed" type="checkbox" name="passed" class="form-check-input" checked value="true">
                            <label for="input-add-exercise-submission-passed" class="form-check-label">@_localizer["Passed"]</label>
                        </div>
                    </div>
                </div>
                <div class="modal-footer">
                    <input type="hidden" data-replace="exercise-id" name="exerciseId" value="">
                    <input type="hidden" data-replace="user-id" name="userId" value="">

                    <button type="submit" class="btn btn-outline-primary">@_localizer["Modal:CreateExerciseSubmission:Submit"]</button>
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">@_localizer["Cancel"]</button>
                </div>
            </form>
        </div>
    </div>
</div>
<div class="modal fade" id="modal-delete-flag-submission" tabindex="-1" role="dialog">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">@_localizer["Modal:DeleteFlagSubmission:Title"]</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <p>
                    @_localizer["Modal:DeleteFlagSubmission:Body"]
                </p>
            </div>
            <div class="modal-footer">
                <form asp-controller="AdminScoreboard" asp-action="DeleteFlagSubmission" asp-route-labId="@Model.LabId" asp-route-slotId="@Model.SlotId" asp-route-groupMode="@Model.GroupMode" asp-route-includeTutors="@Model.IncludeTutors" method="post">
                    <input type="hidden" data-replace="user-id" name="userId" value="">
                    <input type="hidden" data-replace="flag-id" name="flagId" value="">

                    <button type="submit" class="btn btn-outline-danger">@_localizer["Modal:DeleteFlagSubmission:Submit"]</button>
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">@_localizer["Cancel"]</button>
                </form>
            </div>
        </div>
    </div>
</div>
<div class="modal fade" id="modal-add-flag-submission" tabindex="-1" role="dialog">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <form asp-controller="AdminScoreboard" asp-action="CreateFlagSubmission" asp-route-labId="@Model.LabId" asp-route-slotId="@Model.SlotId" asp-route-groupMode="@Model.GroupMode" asp-route-includeTutors="@Model.IncludeTutors" method="post">
                <div class="modal-header">
                    <h5 class="modal-title">@_localizer["Modal:CreateFlagSubmission:Title"]</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>
                <div class="modal-body">
                    <div class="mb-3">
                        <label class="form-label" for="input-add-flag-submission-time">@_localizer["Modal:CreateFlagSubmission:Timestamp"]</label>
                        <input id="input-add-flag-submission-time" name="submissionTime" type="text" class="form-control" />
                    </div>
                </div>
                <div class="modal-footer">
                    <input type="hidden" data-replace="user-id" name="userId" value="">
                    <input type="hidden" data-replace="flag-id" name="flagId" value="">

                    <button type="submit" class="btn btn-outline-primary">@_localizer["Modal:CreateFlagSubmission:Submit"]</button>
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">@_localizer["Cancel"]</button>
                </div>
            </form>
        </div>
    </div>
</div>

<script>
// Date time picker
flatpickr.localize(flatpickr.l10ns.de);                               
options = {
             "altInput": true,
             "altFormat": "Y-m-d H:i:S",
             "enableTime": true,
             "enableSeconds": true,
             "allowInput": true,
             "minuteIncrement": 1
         };
flatpickr(document.getElementById("input-add-exercise-submission-time"), options);
flatpickr(document.getElementById("input-add-flag-submission-time"), options);

// "Select all" checkboxes
let selectAllCheckboxes = document.querySelectorAll('input[name="es-checkbox-select-all"]');
for(let selectAllCheckbox of selectAllCheckboxes)
{
    selectAllCheckbox.addEventListener("change", function(e) {
         let localCheckboxes = selectAllCheckbox.closest("table").querySelectorAll('input[name="es-checkbox"]');
         for(let checkbox of localCheckboxes)
             checkbox.checked = selectAllCheckbox.checked;
    });
}

// Modals
document.getElementById("modal-delete-exercise-submission").addEventListener("show.bs.modal", function(e)
{
    e.target.querySelector('input[data-replace="submission-id"]').value = e.relatedTarget.dataset.submissionid;
    e.target.querySelector('span[data-replace="user-name"]').innerText = e.relatedTarget.dataset.username;
    e.target.querySelector('span[data-replace="exercise-name"]').innerText = e.relatedTarget.dataset.exercisename;
});
document.getElementById("modal-delete-exercise-submissions").addEventListener("show.bs.modal", function(e)
{
    // Clear list of <input> elements
    let inputDiv = document.getElementById("modal-delete-exercise-submissions-inputlist");
    inputDiv.innerHTML = "";
    
    // Add <input> for each checked exercise submission checkbox
    let checked = document.querySelectorAll('input[name=es-checkbox]:checked');
    let inputPrototype = document.createElement("input");
    inputPrototype.setAttribute("type", "hidden");
    inputPrototype.setAttribute("name", "submissionIds");
    for(let checkbox of checked)
    {
        inputPrototype.setAttribute("value", checkbox.value);
        inputDiv.appendChild(inputPrototype.cloneNode(true));
    }
});
document.getElementById("modal-add-exercise-submission").addEventListener("show.bs.modal", function(e)
{
    e.target.querySelector('input[data-replace="exercise-id"]').value = e.relatedTarget.dataset.exerciseid;
    e.target.querySelector('input[data-replace="user-id"]').value = e.relatedTarget.dataset.userid;
});
document.getElementById("modal-delete-flag-submission").addEventListener("show.bs.modal", function(e)
{
    e.target.querySelector('input[data-replace="flag-id"]').value = e.relatedTarget.dataset.flagid;
    e.target.querySelector('input[data-replace="user-id"]').value = e.relatedTarget.dataset.userid;
    e.target.querySelector('span[data-replace="user-name"]').innerText = e.relatedTarget.dataset.username;
});
document.getElementById("modal-add-flag-submission").addEventListener("show.bs.modal", function(e)
{
    e.target.querySelector('input[data-replace="flag-id"]').value = e.relatedTarget.dataset.flagid;
    e.target.querySelector('input[data-replace="user-id"]').value = e.relatedTarget.dataset.userid;
});
</script>