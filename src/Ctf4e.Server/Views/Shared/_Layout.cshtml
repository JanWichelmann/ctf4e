@using Ctf4e.Server.Constants
@using Ctf4e.Server.Models
@using Ctf4e.Server.Options
@using Microsoft.AspNetCore.Localization
@using Microsoft.AspNetCore.Mvc.Localization
@using Microsoft.Extensions.Options
@using Ctf4e.Server.Authorization
@inject IViewLocalizer _localizer
@inject IOptionsSnapshot<MainOptions> _mainOptions
@{
    // Retrieve status messages
    var statusMessages = (List<(string Message, StatusMessageTypes Type, bool Preformatted)>)ViewData["StatusMessages"];

    string StatusMessageTypeToColor(StatusMessageTypes messageType)
    {
        switch(messageType)
        {
            case StatusMessageTypes.Info:
                return "alert-primary";
            case StatusMessageTypes.Success:
                return "alert-success";
            case StatusMessageTypes.Warning:
                return "alert-warning";
            case StatusMessageTypes.Error:
                return "alert-danger";
        }
        return "alert-secondary";
    }

    // User logged in?
    var currentUser = (User)ViewData["CurrentUser"];

    // Current menu item
    var activeMenuItem = (MenuItems)ViewData["ActiveMenuItem"];

    // Build ID
    var buildVersion = (string)ViewData["BuildVersion"];
}
<!DOCTYPE html>
<html lang="de">
<head>
    <meta charset="utf-8" />
    <meta content="width=device-width, initial-scale=1.0, shrink-to-fit=no" name="viewport" />

    <title>@ViewData["Title"] - @ViewData["PageTitle"]</title>

    <link rel="icon" type="image/x-icon" href="~/favicon.ico">
    <link rel="stylesheet" href="~/lib/bootstrap-icons/css/bootstrap-icons.css" />
    <link rel="stylesheet" href="~/css/ctf4e-server.min.css">

    <script src="~/lib/popper/js/popper.min.js"></script>
    <script src="~/js/main.js"></script>
    @if(currentUser != null && currentUser.Privileges != UserPrivileges.Default)
    {
        <script src="~/js/util.js"></script>
    }

    @await RenderSectionAsync("ScriptsHead", required: false)
</head>
<body class="d-flex flex-column">
<header>
<nav class="navbar navbar-expand-lg navbar-light bg-light border-bottom px-2">
<div class="container">

<a class="navbar-brand" asp-controller="Scoreboard" asp-action="RenderScoreboard">
    <i class="bi bi-flag"></i>
    @ViewData["NavbarTitle"]
</a>

<button class="navbar-toggler" type="button" data-bs-toggle="collapse" data-bs-target="#navbar-content" aria-controls="navbar-content" aria-expanded="false" aria-label="@_localizer["ToggleNavbar"]">
    <span class="navbar-toggler-icon"></span>
</button>

<div class="collapse navbar-collapse" id="navbar-content">
    <ul class="navbar-nav me-auto mb-2 mb-lg-0">
        @if(currentUser != null)
        {
            <li class="nav-item">
                <a class="nav-link @(activeMenuItem == MenuItems.Scoreboard ? "active" : "")" asp-controller="Scoreboard" asp-action="RenderScoreboard">
                    @_localizer["MenuItems:Scoreboard"]
                </a>
            </li>
            if(currentUser.Group != null)
            {
                <li class="nav-item">
                    <a class="nav-link @(activeMenuItem == MenuItems.Group ? "active" : "")" asp-controller="UserDashboard" asp-action="RenderLabPage">
                        @_localizer["MenuItems:Dashboard"]
                    </a>
                </li>
            }
            else
            {
                <li class="nav-item">
                    <a class="nav-link @(activeMenuItem == MenuItems.Authentication ? "active" : "")" asp-controller="Authentication" asp-action="ShowGroupForm">
                        @_localizer["MenuItems:CreateGroup"]
                    </a>
                </li>
            }
        }
    </ul>

    @if(currentUser != null)
    {
        bool visitsAdminPage = activeMenuItem == MenuItems.AdminConfiguration
                               || activeMenuItem == MenuItems.AdminExercises
                               || activeMenuItem == MenuItems.AdminFlags
                               || activeMenuItem == MenuItems.AdminGroups
                               || activeMenuItem == MenuItems.AdminLabExecutions
                               || activeMenuItem == MenuItems.AdminLabs
                               || activeMenuItem == MenuItems.AdminScoreboard
                               || activeMenuItem == MenuItems.AdminSlots
                               || activeMenuItem == MenuItems.AdminUsers;

        <ul class="navbar-nav ms-auto mb-2 mb-lg-0">
            @if(currentUser.Privileges != UserPrivileges.Default)
            {
                <li class="nav-item dropdown me-4">
                    <a class="nav-link dropdown-toggle @(visitsAdminPage ? "active" : "")" href="#" id="admin-dropdown" role="button" data-bs-toggle="dropdown" aria-expanded="false">
                        @_localizer["MenuItems:Admin"]
                    </a>
                    <ul class="dropdown-menu dropdown-menu-end mt-0" aria-labelledby="admin-dropdown">
                        @{
                            bool adminMenuItemAdminScoreboard = currentUser.Privileges.HasPrivileges(UserPrivileges.ViewAdminScoreboard);
                            bool adminMenuItemUsers = currentUser.Privileges.HasAnyPrivilege(UserPrivileges.ViewUsers | UserPrivileges.Admin);
                            bool adminMenuItemGroups = currentUser.Privileges.HasPrivileges(UserPrivileges.ViewGroups);
                            bool adminMenuItemLabs = currentUser.Privileges.HasPrivileges(UserPrivileges.ViewLabs);
                            bool adminMenuItemSlots = currentUser.Privileges.HasPrivileges(UserPrivileges.ViewSlots);
                            bool adminMenuItemLabExecutions = currentUser.Privileges.HasPrivileges(UserPrivileges.ViewLabExecutions);
                            bool adminMenuItemConfiguration = currentUser.Privileges.HasPrivileges(UserPrivileges.EditConfiguration);

                            // For deciding whether to insert a divider
                            bool lastWasDivider = true;
                        }
                        @if(adminMenuItemAdminScoreboard)
                        {
                            <li>
                                <a class="dropdown-item @(activeMenuItem == MenuItems.AdminScoreboard ? "text-primary" : "")" asp-controller="AdminScoreboard" asp-action="RenderScoreboard">
                                    <i class="bi bi-bookmark-star text-secondary"></i>
                                    @_localizer["MenuItems:Admin:AdminScoreboard"]
                                </a>
                            </li>

                            lastWasDivider = false;
                        }
                        @if(!lastWasDivider && (adminMenuItemUsers || adminMenuItemGroups))
                        {
                            <li>
                                <hr class="dropdown-divider">
                            </li>

                            lastWasDivider = true;
                        }
                        @if(adminMenuItemUsers)
                        {
                            <li>
                                <a class="dropdown-item @(activeMenuItem == MenuItems.AdminUsers ? "text-primary" : "")" asp-controller="AdminUsers" asp-action="RenderUserList">
                                    <i class="bi bi-person text-secondary"></i>
                                    @_localizer["MenuItems:Admin:Users"]
                                </a>
                            </li>

                            lastWasDivider = false;
                        }
                        @if(adminMenuItemGroups)
                        {
                            <li>
                                <a class="dropdown-item @(activeMenuItem == MenuItems.AdminGroups ? "text-primary" : "")" asp-controller="AdminGroups" asp-action="RenderGroupList">
                                    <i class="bi bi-people text-secondary"></i>
                                    @_localizer["MenuItems:Admin:Groups"]
                                </a>
                            </li>

                            lastWasDivider = false;
                        }
                        @if(!lastWasDivider && (adminMenuItemLabs || adminMenuItemSlots))
                        {
                            <li>
                                <hr class="dropdown-divider">
                            </li>

                            lastWasDivider = true;
                        }
                        @if(adminMenuItemLabs)
                        {
                            <li>
                                <a class="dropdown-item @(activeMenuItem == MenuItems.AdminLabs || activeMenuItem == MenuItems.AdminExercises || activeMenuItem == MenuItems.AdminFlags ? "text-primary" : "")" asp-controller="AdminLabs" asp-action="RenderLabList">
                                    <i class="bi bi-book text-secondary"></i>
                                    @_localizer["MenuItems:Admin:Labs"]
                                </a>
                            </li>

                            lastWasDivider = false;
                        }
                        @if(adminMenuItemSlots)
                        {
                            <li>
                                <a class="dropdown-item @(activeMenuItem == MenuItems.AdminSlots ? "text-primary" : "")" asp-controller="AdminSlots" asp-action="RenderSlotList">
                                    <i class="bi bi-calendar-day text-secondary"></i>
                                    @_localizer["MenuItems:Admin:Slots"]
                                </a>
                            </li>

                            lastWasDivider = false;
                        }
                        @if(!lastWasDivider && adminMenuItemLabExecutions)
                        {
                            <li>
                                <hr class="dropdown-divider">
                            </li>

                            lastWasDivider = true;
                        }
                        @if(adminMenuItemLabExecutions)
                        {
                            <li>
                                <a class="dropdown-item @(activeMenuItem == MenuItems.AdminLabExecutions ? "text-primary" : "")" asp-controller="AdminLabExecutions" asp-action="RenderLabExecutionList">
                                    <i class="bi bi-calendar-range text-secondary"></i>
                                    @_localizer["MenuItems:Admin:LabExecutions"]
                                </a>
                            </li>

                            lastWasDivider = false;
                        }
                        @if(!lastWasDivider && adminMenuItemConfiguration)
                        {
                            <li>
                                <hr class="dropdown-divider">
                            </li>
                        }
                        @if(adminMenuItemConfiguration)
                        {
                            <li>
                                <a class="dropdown-item @(activeMenuItem == MenuItems.AdminConfiguration ? "text-primary" : "")" asp-controller="AdminConfiguration" asp-action="Render">
                                    <i class="bi bi-gear text-secondary"></i>
                                    @_localizer["MenuItems:Admin:Configuration"]
                                </a>
                            </li>
                        }
                    </ul>
                </li>
            }

            <!-- Profile -->
            <li class="nav-item dropdown">
                <a class="nav-link dropdown-toggle fw-bold @(activeMenuItem == MenuItems.Authentication ? "active" : "")" href="#" id="auth-dropdown" role="button" data-bs-toggle="dropdown">
                    @currentUser.DisplayName
                </a>

                <ul class="dropdown-menu dropdown-menu-end mt-0" aria-labelledby="auth-dropdown">
                    <li>
                        <a class="dropdown-item" asp-controller="Authentication" asp-action="ShowSettingsForm">
                            <i class="bi bi-sliders text-secondary"></i>
                            @_localizer["MenuItems:Settings"]
                        </a>
                    </li>

                    <li>
                        <hr class="dropdown-divider">
                    </li>

                    <li>
                        <a class="dropdown-item" asp-controller="Authentication" asp-action="Logout">
                            <i class="bi bi-door-closed text-secondary"></i>
                            @_localizer["MenuItems:Logout"]
                        </a>
                    </li>
                </ul>
            </li>
        </ul>
    }
</div>
</div>
</nav>
</header>

@if(statusMessages.Any())
{
    <div class="container generic-max-width bg-white">
        <div class="row">
            <div class="col px-4">
                @foreach(var statusMessage in statusMessages)
                {
                    <div class="row mt-3">
                        <div class="col-sm">
                            <div class="alert @StatusMessageTypeToColor(statusMessage.Type) alert-dismissible fade show" role="alert">
                                <span class="me-2">
                                    @switch(statusMessage.Type)
                                    {
                                        case StatusMessageTypes.Info:
                                            <i class="bi bi-info-circle"></i>
                                            break;
                                        case StatusMessageTypes.Success:
                                            <i class="bi bi-check-circle"></i>
                                            break;
                                        case StatusMessageTypes.Warning:
                                            <i class="bi bi-exclamation-circle"></i>
                                            break;
                                        case StatusMessageTypes.Error:
                                            <i class="bi bi-x-circle"></i>
                                            break;
                                    }
                                </span>

                                @statusMessage.Message
                                <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
                            </div>
                        </div>
                    </div>
                }
            </div>
        </div>
    </div>
}

<main role="main" class="pb-4 flex-grow-1">
    @RenderBody()
</main>

<footer class="border-top footer d-print-none flex-shrink-0">
    <div class="container">
        <div class="row mt-2 pb-2">
            <div class="col">
                Powered by <a class="link-footer" href="https://github.com/JanWichelmann/ctf4e" target="_blank">CTF4E</a>
                <span>&middot;</span>
                <span>
                    <a class="link-footer" href="https://github.com/JanWichelmann/ctf4e/releases/tag/server%2F@(buildVersion)">v@(buildVersion)</a>
                </span>
                @if(_mainOptions.Value.DevelopmentMode && currentUser != null && currentUser.Privileges.HasPrivileges(UserPrivileges.Admin))
                {
                    <span>&middot;</span>
                    <a class="link-footer" href="~/dev/profiler/results-index" target="_blank">Profiler</a>
                }
            </div>
            <div class="col d-flex align-items-center justify-content-end">
                <div class="dropdown">
                    @{
                        var supportedLanguages = new Dictionary<string, string>
                        {
                            ["en-US"] = "English",
                            ["de-DE"] = "Deutsch"
                        };

                        string currentLanguage = Context.Features.Get<IRequestCultureFeature>()?.RequestCulture.UICulture.Name ?? "en-US";
                        if(!supportedLanguages.ContainsKey(currentLanguage))
                        {
                            currentLanguage = "en-US";
                        }
                    }
                    <a class="dropdown-toggle link-footer cursor-link" id="language-menu-button" data-bs-toggle="dropdown" aria-expanded="false" title="@_localizer["ChangeLanguage"]">@supportedLanguages[currentLanguage]</a>
                    <ul class="dropdown-menu" aria-labelledby="language-menu-button">
                        @foreach(var language in supportedLanguages)
                        {
                            if(language.Key != currentLanguage)
                            {
                                <li>
                                    <a class="dropdown-item" href="#" onclick="switchLanguage(this)" data-language-id="@language.Key">@language.Value</a>
                                </li>
                            }
                        }
                    </ul>
                    <input type="hidden" id="language-cookie-name" value="@CookieRequestCultureProvider.DefaultCookieName">
                </div>
            </div>
        </div>
    </div>
</footer>

<script src="~/lib/bootstrap/js/bootstrap.bundle.min.js"></script>
@await RenderSectionAsync("ScriptsBody", required: false)
</body>
</html>