@using Ctf4e.Server.Models
@model Flag
@{
    var lesson = (Lesson)ViewData["Lesson"];
}

<h3 class="header">
    Flag erstellen
</h3>
<hr class="header">

<form asp-controller="AdminFlags" asp-action="CreateFlag" method="post">
    <div class="mb-3">
        <label class="form-label" asp-for="Code">Flag-Code</label>
        <input asp-for="Code" class="form-control" placeholder="Flag-Code eingeben" value="CTF{1n5er7-f14g-c0de-here-@RandomStringGenerator.GetRandomString(6)}">
        <span asp-validation-for="Code" class="text-danger"></span>
        <small class="form-text text-muted">
            Flags müssen immer dem Format &quot;CTF{&lt;flag code&gt;}&quot; entsprechen, wenn die Gruppen diese selbst einlösen können sollen.
        </small>
    </div>
    <div class="mb-3">
        <label class="form-label" asp-for="Description">Beschreibung</label>
        <input asp-for="Description" class="form-control" placeholder="Namen eingeben">
        <span asp-validation-for="Description" class="text-danger"></span>
    </div>
    <div class="mb-3">
        <label class="form-label" asp-for="BasePoints">Basispunktzahl</label>
        <input asp-for="BasePoints" class="form-control">
        <span asp-validation-for="BasePoints" class="text-danger"></span>
    </div>
    <div class="mb-3">
        <div class="form-check">
            <input asp-for="IsBounty" class="form-check-input">
            <label asp-for="IsBounty" class="form-check-label">Bug-Bounty?</label>
            <small class="form-text text-muted">
                Bug-Bounty-Flags werden nicht skaliert, sondern ergeben unabhängig von der Anzahl der Einlösungen immer dieselbe Punktzahl.
            </small>
        </div>
    </div>

    <input asp-for="LessonId" type="hidden" value="@lesson.Id">

    <button type="submit" class="btn btn-primary">Flag erstellen</button>
    <a asp-controller="AdminFlags" asp-action="RenderFlagList" asp-route-lessonId="@lesson.Id" class="btn btn-secondary">Abbrechen</a>
</form>