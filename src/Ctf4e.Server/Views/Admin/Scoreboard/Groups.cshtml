@using Microsoft.AspNetCore.Mvc.Localization
@inject IViewLocalizer Localizer
@model AdminScoreboardOverview
@{
    ViewData["Title"] = Localizer["HtmlTitle"];
}

<div class="container">

    @{
        var navViewModel = new NavViewModel
        {
            SubView = SubView.Groups,
            LabId = Model.LabId,
            SlotId = Model.SlotId
        };
    }
    <partial name="Nav.cshtml" model="navViewModel" />

    <table class="table table-sm table-align-middle mt-4" id="groups-table">
        <thead>
        <tr class="row-sticky">
            <th scope="col"></th>
            <th scope="col">
                @Localizer["Columns:Name"]
                <input type="text" id="input-filter-name" class="form-control form-control-sm d-inline w-auto ms-2" placeholder="Filter">
            </th>
            <th scope="col" class="text-end">
                @Localizer["Columns:Stats"]
            </th>
            <th scope="col"></th>
        </tr>
        </thead>
        @foreach(var groupEntry in Model.GroupEntries)
        {
            <tbody class="table-group-divider">
            <tr>
                <td class="bg-body-secondary">
                    @if(groupEntry.HasPassed)
                    {
                        <i class="bi bi-check-circle-fill text-success cursor-help" title="@Localizer["Passed"]"></i>
                    }
                    else
                    {
                        <i class="bi bi-x-circle-fill text-danger cursor-help" title="@Localizer["NotPassed"]"></i>
                    }
                </td>
                <td class="bg-body-secondary fw-bold" data-content="name">
                    @groupEntry.Name
                </td>
                <td class="text-end bg-body-secondary">
                    @if(groupEntry.Status == LabExecutionStatus.Start)
                    {
                        <span class="badge bg-warning cursor-help" title="@Localizer["LabExecutionStatus:Start:Text"]">@Localizer["LabExecutionStatus:Start:Title"]</span>
                    }
                    else if(groupEntry.Status == LabExecutionStatus.End)
                    {
                        <span class="badge bg-success cursor-help" title="@Localizer["LabExecutionStatus:End:Text"]">@Localizer["LabExecutionStatus:End:Title"]</span>
                    }
                    else if(groupEntry.Status == LabExecutionStatus.Undefined)
                    {
                        <span class="badge bg-danger cursor-help" title="@Localizer["LabExecutionStatus:Undefined:Text"]">@Localizer["LabExecutionStatus:Undefined:Title"]</span>
                    }
                    <span class="badge bg-primary cursor-help" title="@Localizer["Statistics:MandatoryExercises"]">@groupEntry.PassedMandatoryExercisesCount / @Model.MandatoryExercisesCount</span>
                    <span class="badge bg-secondary cursor-help" title="@Localizer["Statistics:OptionalExercises"]">@groupEntry.PassedOptionalExercisesCount / @Model.OptionalExercisesCount</span>
                    <span class="badge bg-info cursor-help" title="@Localizer["Statistics:FoundFlags"]">@groupEntry.FoundFlagsCount / @Model.FlagCount</span>
                </td>
                <td class="bg-body-secondary text-end">
                    <a asp-controller="AdminScoreboard" asp-action="ShowGroupDashboard" asp-route-groupId="@groupEntry.Id" asp-route-labId="@Model.LabId" class="btn btn-sm btn-outline-primary">
                        <i class="bi bi-arrow-right"></i>
                        @Localizer["OpenGroupDashboard"]
                    </a>
                </td>
            </tr>

            @foreach(var userEntry in groupEntry.Members)
            {
                <tr>
                    <td>
                        @if(userEntry.HasPassed)
                        {
                            <i class="bi bi-check-circle-fill text-success" title="@Localizer["Passed"]"></i>
                        }
                        else
                        {
                            <i class="bi bi-x-circle-fill text-danger" title="@Localizer["NotPassed"]"></i>
                        }
                    </td>
                    <td class="ps-4" data-content="name">
                        @userEntry.DisplayName
                    </td>
                    <td class="text-end">
                        <span class="badge bg-primary cursor-help" title="@Localizer["Statistics:MandatoryExercises"]">@userEntry.PassedMandatoryExercisesCount / @Model.MandatoryExercisesCount</span>
                        <span class="badge bg-secondary cursor-help" title="@Localizer["Statistics:OptionalExercises"]">@userEntry.PassedOptionalExercisesCount / @Model.OptionalExercisesCount</span>
                        <span class="badge bg-info cursor-help" title="@Localizer["Statistics:FoundFlags"]">@userEntry.FoundFlagsCount / @Model.FlagCount</span>
                    </td>
                    <td class="text-end">
                        <a asp-controller="AdminScoreboard" asp-action="ShowUserDashboard" asp-route-userId="@userEntry.Id" asp-route-labId="@Model.LabId" class="btn btn-sm btn-outline-primary">
                            <i class="bi bi-arrow-right"></i>
                            @Localizer["OpenUserDashboard"]
                        </a>
                    </td>
                </tr>
            }
            </tbody>
        }
    </table>
</div>

<script>
let filterInputName = document.getElementById("input-filter-name");
    
function filterTable()
{
    let nameFilter = new RegExp(filterInputName.value, "i");

    // We show every tbody block where the group name or any user name matches the filter
    let table = document.getElementById("groups-table"); 
    for (let tbody of table.querySelectorAll("tbody"))
    {             
        let show = false;
        for(let row of tbody.rows)
        {
            let nameCell = row.querySelector('td[data-content="name"]');
            if(nameCell && nameFilter.test(nameCell.innerHTML))
            {
                show = true;
                break;
            }
        }    
        
        if(show)
            tbody.classList.remove("d-none");
        else
            tbody.classList.add("d-none");
    }      

    // Remember filters
    setCookie("AdminScoreboardGroupsListFilterName", filterInputName.value);
}

filterInputName.addEventListener("input", delay(filterTable, 500));

window.addEventListener("load", function()
{
    // Restore filters
    filterInputName.value = getCookie("AdminScoreboardGroupsListFilterName") ?? "";
    filterTable();
});
</script>