@using System.Globalization
@using Ctf4e.Server.Authorization
@using Ctf4e.Server.Models
@using Microsoft.AspNetCore.Mvc.Localization
@using Microsoft.AspNetCore.Mvc.TagHelpers
@inject IViewLocalizer Localizer
@model AdminScoreboardDetails
@{
    ViewData["Title"] = Localizer["HtmlTitle"];

    var currentUser = (User)ViewData["CurrentUser"];
    bool allowEdit = currentUser.Privileges.HasPrivileges(UserPrivileges.EditAdminScoreboard);
}

<div class="container">

    @{
        var navViewModel = new NavViewModel
        {
            SubView = SubView.UserDashboard,
            LabId = Model.LabId,
            SlotId = Model.SlotId,
            UserId = Model.UserId!.Value,
            UserName = Model.UserName
        };
    }
    <partial name="Nav.cshtml" model="navViewModel" />

    <h2 class="mt-5">@Localizer["Title:Exercises"]</h2>
    <hr class="header-secondary">

    @foreach(var exercise in Model.Exercises)
    {
        <div class="card mb-3">
            <div class="card-header">
                <div class="row">
                    <div class="col">
                        @if(exercise.Passed)
                        {
                            <i class="bi bi-check-circle-fill text-success cursor-help me-2" title="@Localizer["Solved"]"></i>
                        }
                        else
                        {
                            <i class="bi bi-x-circle-fill text-danger cursor-help me-2" title="@Localizer["NotSolved"]"></i>
                        }

                        @exercise.ExerciseName

                        @if(exercise.IsMandatory)
                        {
                            <span class="badge bg-info ms-2">@Localizer["Mandatory"]</span>
                        }
                        else
                        {
                            <span class="badge text-bg-secondary ms-2">@Localizer["Optional"]</span>
                        }
                    </div>
                    <div class="col-auto ms-auto">
                        <span class="badge bg-light text-dark" title="@Localizer["Tries:Text"]">@Localizer["Tries:Value", exercise.ValidTries, exercise.Tries]</span>
                        @if(exercise.Passed)
                        {
                            <span class="badge bg-primary">@Localizer["Points", exercise.Points]</span>
                        }
                    </div>
                </div>
            </div>
            <div class="card-body">
                <table class="table table-sm table-align-middle">
                    <thead>
                    <tr>
                        <th scope="col">
                            <input type="checkbox" class="form-check-input" name="es-checkbox-select-all">
                        </th>
                        <th scope="col"></th>
                        <th scope="col">@Localizer["Submissions:Solved"]</th>
                        <th scope="col">@Localizer["Submissions:Timestamp"]</th>
                        <th scope="col">@Localizer["Submissions:Weight"]</th>
                        <th scope="col">@Localizer["Submissions:Points"]</th>
                        @if(allowEdit)
                        {
                            <th scope="col">
                                <button class="btn btn-sm btn-outline-primary" role="button" data-bs-toggle="modal" data-bs-target="#modal-add-exercise-submission" data-exercise-id="@exercise.Id">
                                    <i class="bi bi-plus"></i>
                                    @Localizer["Create"]
                                </button>
                            </th>
                        }
                    </tr>
                    </thead>
                    <tbody class="table-group-divider">
                    @{
                        bool sawPassedSolution = false;
                    }
                    @foreach(var submission in exercise.Submissions.Where(s => s.UserId == Model.UserId))
                    {
                        <tr class="@(sawPassedSolution ? "row-highlighted" : "")" data-submission-id="@submission.Id">
                            <td>
                                <input type="checkbox" class="form-check-input" name="es-checkbox">
                            </td>
                            <th scope="row">#@submission.Id</th>
                            <td>
                                @if(submission.Solved)
                                {
                                    if(submission.Valid)
                                    {
                                        <i class="bi bi-check-circle-fill text-success cursor-help" title="@Localizer["Solved"]"></i>
                                    }
                                    else
                                    {
                                        <i class="bi bi-check-circle text-success cursor-help" title="@Localizer["SubmissionInvalid"]"></i>
                                    }
                                }
                                else
                                {
                                    if(submission.Valid)
                                    {
                                        <i class="bi bi-x-circle-fill text-danger cursor-help" title="@Localizer["NotSolved"]"></i>
                                    }
                                    else
                                    {
                                        <i class="bi bi-x-circle text-danger cursor-help" title="@Localizer["SubmissionInvalid"]"></i>
                                    }
                                }
                            </td>
                            <td>
                                @submission.SubmissionTime.ToString("G")
                            </td>
                            <td>
                                @submission.Weight
                            </td>
                            <td>
                                @if(!sawPassedSolution)
                                {
                                    if(submission.Solved)
                                    {
                                        <span class="text-success fw-bold">
                                            +@exercise.BasePoints
                                        </span>
                                    }
                                    else
                                    {
                                        <span class="text-danger fw-bold">
                                            &minus;@(submission.Weight * exercise.PenaltyPoints)
                                        </span>
                                    }
                                }
                            </td>
                            @if(allowEdit)
                            {
                                <td>
                                    <button class="btn btn-sm btn-outline-danger" role="button" data-bs-toggle="modal" data-bs-target="#modal-delete-exercise-submission">
                                        <i class="bi bi-trash"></i>
                                        @Localizer["Delete"]
                                    </button>
                                </td>
                            }
                        </tr>

                        if(submission.Solved)
                        {
                            sawPassedSolution = true;
                        }
                    }
                    </tbody>
                </table>

                @if(allowEdit)
                {
                    <button class="btn btn-sm btn-outline-danger" role="button" data-bs-toggle="modal" data-bs-target="#modal-delete-exercise-submissions">
                        <i class="bi bi-trash"></i>
                        @Localizer["DeleteSelected"]
                    </button>
                }
            </div>
        </div>
    }


    <h2 class="mt-5">@Localizer["Title:Flags"]</h2>
    <hr class="header-secondary">

    <table class="table table-sm table-align-middle">
        <thead>
        <tr class="row-sticky">
            <th scope="col"></th>
            <th scope="col">@Localizer["Flags:Description"]</th>
            <th scope="col">@Localizer["Flags:Timestamp"]</th>
            <th scope="col"></th>
            <th scope="col"></th>
        </tr>
        </thead>
        <tbody class="table-group-divider">
        @foreach(var flag in Model.Flags)
        {
            var submission = flag.Submissions.FirstOrDefault(s => s.UserId == Model.UserId);
            
            <tr>
                <th scope="row">
                    @if(flag.Valid)
                    {
                        <i class="bi bi-check-circle-fill text-success cursor-help" title="@Localizer["FlagValid"]"></i>
                    }
                    else if(flag.Submitted)
                    {
                        <i class="bi bi-check-circle text-danger cursor-help" title="@Localizer["FlagInvalid"]"></i>
                    }
                    else
                    {
                        <i class="bi bi-x-circle-fill text-danger cursor-help" title="@Localizer["FlagNotSubmitted"]"></i>
                    }
                </th>
                <td>
                    @flag.Description
                    @if(flag.IsBounty)
                    {
                        <i class="bi bi-bug-fill text-primary" title="@Localizer["BugBounty"]"></i>
                    }
                </td>              
                <td>
                    @if(submission != null)
                    {
                        @submission.SubmissionTime.ToString("G")
                    }
                </td>
                <td>
                    @if(flag.Valid)
                    {
                        <span class="badge bg-primary">@Localizer["Points", flag.Points]</span>
                    }
                </td>   
                <td>
                    @if(allowEdit)
                    {
                        if(flag.Submitted)
                        {
                            <button class="btn btn-sm btn-outline-danger" role="button" data-bs-toggle="modal" data-bs-target="#modal-delete-flag-submission" data-flag-id="@flag.Id" data-user-id="@Model.UserId">
                                <i class="bi bi-trash"></i>
                                @Localizer["ResetFlag"]
                            </button>
                        }
                        else
                        {
                            <button class="btn btn-sm btn-outline-primary" role="button" data-bs-toggle="modal" data-bs-target="#modal-add-flag-submission" data-flag-id="@flag.Id" data-user-id="@Model.UserId">
                                <i class="bi bi-plus"></i>
                                @Localizer["SubmitFlag"]
                            </button>
                        }
                    }
                </td>
            </tr>
        }
        </tbody>
    </table>  
    
    
    <h2 class="mt-5">@Localizer["Title:Actions"]</h2>
    <hr class="header-secondary">

    @if(currentUser.Privileges.HasPrivileges(UserPrivileges.LoginAsLabServerAdmin))
    {
        <a asp-controller="AdminScoreboard" asp-action="CallLabServer" asp-route-labId="@Model.LabId" asp-route-userId="@Model.UserId" target="_blank" class="btn btn-sm btn-outline-secondary">
            <i class="bi bi-arrow-return-right"></i>
            <i class="bi bi-hdd-network"></i>
            @Localizer["CallLabServer"]
        </a>
    }
</div>

<partial name="DashboardLogic.cshtml" />

<partial name="~/Views/Shared/Toasts.cshtml" />


@section ScriptsHead
{
    <link asp-href-include="~/lib/flatpickr/css/flatpickr.min.css" asp-append-version="true" rel="stylesheet" />
    <script asp-src-include="~/lib/flatpickr/js/flatpickr.min.js" asp-append-version="true"></script>
    <script asp-src-include="~/lib/flatpickr/js/l10n/de.js" asp-append-version="true"></script>
    <script>
        flatpickr.localize(flatpickr.l10ns.@CultureInfo.CurrentCulture.TwoLetterISOLanguageName);
        options = {
            "dateFormat": "Y-m-d H:i:S",
            "enableTime": true,
            "enableSeconds": true,
            "allowInput": true,
            "minuteIncrement": 1
        };
    </script>
}