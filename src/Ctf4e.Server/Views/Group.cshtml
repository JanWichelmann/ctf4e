@using Ctf4e.Server.Services
@using Ctf4e.Server.ViewModels
@using Ctf4e.Server.Models
@inject IConfigurationService ConfigurationService
@{
    ViewData["Title"] = "Aufgaben";

    var groupScoreboard = (GroupScoreboard)ViewData["Scoreboard"];
}

<div class="container">
@if(groupScoreboard != null)
{
    <div class="float-end">
        @if(groupScoreboard.HasPassed)
        {
            <span class="badge bg-success" style="font-size: 1rem;">
                <i class="bi bi-check-circle"></i>
                Bestanden
            </span>
        }
    </div>

    <h3 class="header">
        Praktikum: @groupScoreboard.CurrentLab.Name
    </h3>
    <hr class="header">

    switch(groupScoreboard.LabExecutionStatus)
    {
        case ScoreboardGroupStatus.Undefined:
            <span class="badge bg-secondary">Nicht freigeschaltet</span>
            <p>
                Dieses Praktikum ist bisher nicht freigeschaltet worden.
                Es können weder Aufgaben bearbeitet noch Flags eingelöst werden.
            </p>
            break;
        case ScoreboardGroupStatus.BeforePreStart:
            <span class="badge bg-warning">Noch nicht gestartet</span>
            <p>
                Dieses Praktikum hat noch nicht begonnen.
                Es können weder Aufgaben bearbeitet noch Flags eingelöst werden. <br>
                Startzeitpunkt: <strong>@groupScoreboard.LabExecution.PreStart.ToString(DateTimeFormats.DateAndTimeMinutes)</strong>
            </p>
            break;
        case ScoreboardGroupStatus.PreStart:
            <span class="badge bg-info">Vorbereitungsphase</span>
            <p>
                Dieses Praktikum ist in der Vorbereitungsphase.
                Es können einige ausgewählte Aufgaben bearbeitet und alle Flags eingelöst werden. <br>
                Beginn der Haupt-Bearbeitungsphase: <strong>@groupScoreboard.LabExecution.Start.ToString(DateTimeFormats.DateAndTimeMinutes)</strong>
            </p>
            break;
        case ScoreboardGroupStatus.Start:
            <span class="badge bg-success">Aktiv</span>
            <p>
                Dieses Praktikum ist aktiv.
                Es können alle Aufgaben bearbeitet und alle Flags eingelöst werden. <br>
                Ende des Praktikums: <strong>@groupScoreboard.LabExecution.End.ToString(DateTimeFormats.DateAndTimeMinutes)</strong>
            </p>
            break;
        case ScoreboardGroupStatus.End:
            <span class="badge bg-dark">Beendet</span>
            <p>
                Dieses Praktikum ist beendet.
                Es können weiterhin Aufgaben bearbeitet und Flags eingelöst werden; diese werden in der Wertung und auf dem Scoreboard jedoch nicht mehr berücksichtigt.
            </p>
            break;
    }

    if(groupScoreboard.LabExecutionStatus != ScoreboardGroupStatus.Undefined && groupScoreboard.LabExecutionStatus != ScoreboardGroupStatus.BeforePreStart)
    {
        <a class="btn btn-primary" asp-controller="Group" asp-action="CallLabServer" asp-route-labId="@groupScoreboard.LabId" target="_blank">
            <i class="bi bi-arrow-return-right"></i>
            Zum Praktikumsserver
        </a>    }

    <h5 class="header">
        Aufgaben
    </h5>
    <hr class="header-secondary">

    foreach(var exercise in groupScoreboard.Exercises)
    {
        <div class="card mb-2">
            <div class="card-header" id="exercise@(exercise.Exercise.Id)-card-heading" style="cursor: pointer" data-bs-toggle="collapse" data-bs-target="#exercise@(exercise.Exercise.Id)-card">
                <div class="row">
                    <div class="col-sm text-start">
                        @exercise.Exercise.Name
                        @if(exercise.Exercise.IsMandatory)
                        {
                            <span class="badge bg-info">Pflicht</span>
                        }
                    </div>
                    <div class="col-sm text-end">
                        <span class="badge bg-light">Versuche: @exercise.ValidTries gültig, @exercise.Tries insgesamt</span>
                        @if(exercise.Passed)
                        {
                            <span class="badge bg-primary">@exercise.Points Punkte</span>
                            <i class="bi bi-check-circle-fill  text-success" title="Gelöst"></i>
                        }
                        else
                        {
                            <i class="bi bi-x-circle-fill  text-danger" title="Nicht gelöst"></i>
                        }
                    </div>
                </div>
            </div>
            <div id="exercise@(exercise.Exercise.Id)-card" class="collapse @(exercise.Submissions.Any() ? "show" : ""))">
                <div class="card-body">
                    <table class="table table-sm">
                        <thead>
                        <tr>
                            <th scope="col">Zeitpunkt des Lösungsversuchs</th>
                            <th scope="col">Korrekte Lösung?</th>
                            <th scope="col">Gruppenmitglied</th>
                        </tr>
                        </thead>
                        <tbody>
                        @foreach(var submission in exercise.Submissions)
                        {
                            <tr>
                                <td>
                                    @submission.SubmissionTime.ToString(DateTimeFormats.DateAndTimeSeconds)
                                    @if(submission.SubmissionTime < (groupScoreboard.LabExecution?.PreStart ?? DateTime.MinValue) || submission.SubmissionTime >= (groupScoreboard.LabExecution?.End ?? DateTime.MinValue))
                                    {
                                        <span class="badge bg-warning" title="Dieser Lösungsversuch fand außerhalb der vorgegebenen Praktikumszeit statt.">ungültig</span>
                                    }
                                </td>
                                <td>
                                    @if(submission.ExercisePassed)
                                    {
                                        <i class="bi bi-check-circle-fill  text-success align-middle"></i>
                                    }
                                    else
                                    {
                                        <i class="bi bi-x-circle-fill  text-danger align-middle"></i>
                                    }
                                </td>
                                <td>
                                    @groupScoreboard.GroupMembers[submission.UserId]
                                </td>
                            </tr>
                        }
                        </tbody>
                    </table>
                </div>
            </div>
        </div>
    }

    <div>
        <div class="float-end">
            @if(!groupScoreboard.HasPassed)
            {
                @:Gefundene Flags: @groupScoreboard.ValidFoundFlagsCount gültig, @groupScoreboard.FoundFlagsCount insgesamt
            }
        </div>

        <h5 class="header">
            Flag einlösen
        </h5>
        <hr class="header-secondary">
    </div>

    <form asp-controller="Group" asp-action="SubmitFlag" asp-route-labId="@groupScoreboard.LabId">
        <div class="mb-3">
            <label class="form-label" for="input-flag-code">Flag-Code</label>
            <div class="input-group">
                <div class="input-group-prepend">
                    <div class="input-group-text font-monospace">@(await ConfigurationService.GetFlagPrefixAsync())</div>
                </div>
                <input type="text" class="form-control font-monospace" name="code" id="input-flag-code" placeholder="1n5er7-f14g-c0de-here-37a12d">
                <div class="input-group-append">
                    <div class="input-group-text font-monospace">@(await ConfigurationService.GetFlagSuffixAsync())</div>
                </div>
            </div>
        </div>

        <button type="submit" class="btn btn-primary">
            <span class="bi bi-flag-fill"></span>
            Flag einlösen
        </button>
    </form>
    <h5 class="header">
        Zu anderem Praktikum wechseln
    </h5>
    <hr class="header-secondary">

    <form asp-controller="Group" asp-action="RenderLabPage" method="get">
        <div class="mb-3">
            <label class="form-label" for="input-lab-id">Praktikum</label>
            <select id="input-lab-id" name="labId" class="form-control" onchange="this.form.submit()">
                @foreach(var lab in groupScoreboard.Labs)
                {
                    <option value="@lab.LabId" selected="@(groupScoreboard.LabId == lab.LabId)">
                        @lab.Name
                        @if(lab.Active)
                        {
                            @:(aktiv)
                        }
                    </option>                }
            </select>
        </div>

        <button type="submit" class="btn btn-primary">
            <i class="bi bi-arrow-return-right"></i>
            Zu ausgewähltem Praktikum wechseln
        </button>
    </form>}
</div>