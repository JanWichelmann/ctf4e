@using Ctf4e.Server.Controllers
@using Ctf4e.Server.Services
@using Ctf4e.Server.ViewModels
@inject IConfigurationService ConfigurationService
@{
    ViewData["Title"] = "Aufgaben";

    var groupScoreboard = (GroupScoreboard)ViewData["Scoreboard"];
}

@if(groupScoreboard != null)
{
    <div class="row align-items-center">
        <div class="col text-left">
            <h3 class="text-primary">
                Praktikum: @groupScoreboard.CurrentLab.Name
            </h3>
        </div>
        <div class="col text-right">
            @if(groupScoreboard.HasPassed)
            {
                <span class="badge badge-success" style="font-size: 1rem;">
                    <span class="oi oi-check"></span>
                    Bestanden
                </span>
            }
        </div>
    </div>
    <hr class="bg-primary mt-2" style="height: 2px">

    @switch(groupScoreboard.LabExecutionStatus)
    {
        case ScoreboardGroupStatus.Undefined:
            <span class="badge badge-secondary">Nicht freigeschaltet</span>
            <p>
                Dieses Praktikum ist bisher nicht freigeschaltet worden.
                Es können weder Aufgaben bearbeitet noch Flags eingelöst werden.
            </p>
            break;
        case ScoreboardGroupStatus.BeforePreStart:
            <span class="badge badge-warning">Noch nicht gestartet</span>
            <p>
                Dieses Praktikum hat noch nicht begonnen.
                Es können weder Aufgaben bearbeitet noch Flags eingelöst werden. <br>
                Startzeitpunkt: <strong>@groupScoreboard.LabExecution.PreStart.ToString(DateTimeFormats.DateAndTimeMinutes)</strong>
            </p>
            break;
        case ScoreboardGroupStatus.PreStart:
            <span class="badge badge-info">Vorbereitungsphase</span>
            <p>
                Dieses Praktikum ist in der Vorbereitungsphase.
                Es können einige ausgewählte Aufgaben bearbeitet und alle Flags eingelöst werden. <br>
                Beginn der Haupt-Bearbeitungsphase: <strong>@groupScoreboard.LabExecution.Start.ToString(DateTimeFormats.DateAndTimeMinutes)</strong>
            </p>
            break;
        case ScoreboardGroupStatus.Start:
            <span class="badge badge-success">Aktiv</span>
            <p>
                Dieses Praktikum ist aktiv.
                Es können alle Aufgaben bearbeitet und alle Flags eingelöst werden. <br>
                Ende des Praktikums: <strong>@groupScoreboard.LabExecution.End.ToString(DateTimeFormats.DateAndTimeMinutes)</strong>
            </p>
            break;
        case ScoreboardGroupStatus.End:
            <span class="badge badge-dark">Beendet</span>
            <p>
                Dieses Praktikum ist beendet.
                Es können weiterhin Aufgaben bearbeitet und Flags eingelöst werden; diese werden in der Wertung und auf dem Scoreboard jedoch nicht mehr berücksichtigt.
            </p>
            break;
    }

    @if(groupScoreboard.LabExecutionStatus != ScoreboardGroupStatus.Undefined && groupScoreboard.LabExecutionStatus != ScoreboardGroupStatus.BeforePreStart)
    {
        <a class="btn btn-primary" href="@(Url.Action<GroupController>(nameof(GroupController.CallLabServerAsync), new { labId = groupScoreboard.LabId }))" target="_blank">
            <span class="oi oi-external-link"></span>
            Zum Praktikumsserver
        </a>
    }

    <h5 class="text-primary mt-5">
        Aufgaben
    </h5>
    <hr class="bg-primary mb-2 mt-1" style="height: 2px;">

    @foreach(var exercise in groupScoreboard.Exercises)
    {
        <div class="card">
            <div class="card-header" id="exercise@(exercise.Exercise.Id)-card-heading" style="cursor: pointer" data-toggle="collapse" data-target="#exercise@(exercise.Exercise.Id)-card">
                <div class="row">
                    <div class="col-sm text-left">
                        @exercise.Exercise.Name
                        @if(exercise.Exercise.IsMandatory)
                        {
                            <span class="badge badge-info">Pflicht</span>
                        }
                    </div>
                    <div class="col-sm text-right">
                        <span class="badge badge-light">Versuche: @exercise.ValidTries gültig, @exercise.Tries insgesamt</span>
                        @if(exercise.Passed)
                        {
                            <span class="badge badge-primary">@exercise.Points Punkte</span>
                            <span class="oi oi-circle-check text-success" title="Gelöst"></span>
                        }
                        else
                        {
                            <span class="oi oi-circle-x text-danger" title="Nicht gelöst"></span>
                        }
                    </div>
                </div>
            </div>
            <div id="exercise@(exercise.Exercise.Id)-card" class="collapse @(exercise.Submissions.Any() ? "show" : ""))">
                <div class="card-body">
                    <table class="table table-sm">
                        <thead>
                        <tr>
                            <th scope="col">Zeitpunkt des Lösungsversuchs</th>
                            <th scope="col">Korrekte Lösung?</th>
                            <th scope="col">Gruppenmitglied</th>
                        </tr>
                        </thead>
                        <tbody>
                        @foreach(var submission in exercise.Submissions)
                        {
                            <tr>
                                <td>
                                    @submission.SubmissionTime.ToString(DateTimeFormats.DateAndTimeSeconds)
                                    @if(submission.SubmissionTime < (groupScoreboard.LabExecution?.PreStart ?? DateTime.MinValue) || submission.SubmissionTime >= (groupScoreboard.LabExecution?.End ?? DateTime.MinValue))
                                    {
                                        <span class="badge badge-warning" title="Dieser Lösungsversuch fand außerhalb der vorgegebenen Praktikumszeit statt.">ungültig</span>
                                    }
                                </td>
                                <td>
                                    @if(submission.ExercisePassed)
                                    {
                                        <span class="oi oi-circle-check text-success align-middle"></span>
                                    }
                                    else
                                    {
                                        <span class="oi oi-circle-x text-danger align-middle"></span>
                                    }
                                </td>
                                <td>
                                    @groupScoreboard.GroupMembers[submission.UserId]
                                </td>
                            </tr>
                        }
                        </tbody>
                    </table>
                </div>
            </div>
        </div>
    }

    <div class="row align-items-center mt-5">
        <div class="col text-left">
            <h5 class="text-primary">
                Flag einlösen
            </h5>
        </div>
        <div class="col text-right">
            <span class="badge badge-light bg-white">Gefundene Flags: @groupScoreboard.ValidFoundFlagsCount gültig, @groupScoreboard.FoundFlagsCount insgesamt</span>
        </div>
    </div>
    <hr class="bg-primary mb-2 mt-1" style="height: 2px">

    <form>
        <div class="form-group">
            <label for="input-flag-code">Flag-Code</label>
            <div class="input-group">
                <div class="input-group-prepend">
                    <div class="input-group-text text-monospace">@(await ConfigurationService.GetFlagPrefixAsync())</div>
                </div>
                <input type="text" class="form-control text-monospace" id="input-flag-code" placeholder="1n5er7-f14g-c0de-here-37a12d">
                <div class="input-group-append">
                    <div class="input-group-text text-monospace">@(await ConfigurationService.GetFlagSuffixAsync())</div>
                </div>
            </div>
        </div>

        <button type="button" class="btn btn-primary" onclick="submit_flag()">
            <span class="oi oi-flag"></span>
            Flag einlösen
        </button>
    </form>

    <div class="modal fade" id="modal-flag-submission-success" tabindex="-1" role="dialog">
        <div class="modal-dialog" role="document">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title">Flag einlösen</h5>
                    <button type="button" class="close" data-dismiss="modal">
                        <span>&times;</span>
                    </button>
                </div>
                <div class="modal-body">
                    <p>
                        Die Flag wurde erfolgreich eingelöst!
                    </p>
                </div>
                <div class="modal-footer">
                    <a role="button" class="btn btn-primary" href="javascript:window.location.href = window.location.href">Seite neu laden</a>
                </div>
            </div>
        </div>
    </div>

    <div class="modal fade" id="modal-flag-submission-failed" tabindex="-1" role="dialog">
        <div class="modal-dialog" role="document">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title">Flag einlösen</h5>
                    <button type="button" class="close" data-dismiss="modal">
                        <span>&times;</span>
                    </button>
                </div>
                <div class="modal-body">
                    <p>
                        Die Flag konnte nicht eingelöst werden.
                    </p>
                    <p>
                        Mögliche Gründe sind:
                        <ul>
                            <li>Im Flag-Code ist ein Tippfehler.</li>
                            <li>Sie haben diese Flag bereits eingelöst.</li>
                            <li>Die Flag ist einem anderen Praktikum zugeordnet.</li>
                        </ul>
                    </p>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-primary" data-dismiss="modal">Schließen</button>
                </div>
            </div>
        </div>
    </div>

    <script>
        function submit_flag() {
            $.ajax("@(Url.Action<GroupController>(nameof(GroupController.SubmitFlagAsync), new { labId = groupScoreboard.LabId }))",
                {
                    type: "POST",
                    data: {
                        flagCode: $("#input-flag-code").val()
                    },
                    success: function (data, status, xhr) {
                        if(data.success)
                            $("#modal-flag-submission-success").modal();
                        else
                            $("#modal-flag-submission-failed").modal();
                    },
                    error: function (xhr, status, errorMsg) {
                        alert("Fehler beim Senden der AJAX-Anfrage: " + errorMsg);
                    }
                });
        }
    </script>

    <h5 class="text-primary mt-5">
        Zu anderem Praktikum wechseln
    </h5>
    <hr class="bg-primary mb-2 mt-1" style="height: 2px">

    <form action="@(Url.Action<GroupController>(nameof(GroupController.RenderLabPageAsync)))" method="get">
        <div class="form-group">
            <label for="input-lab-id">Praktikum</label>
            <select id="input-lab-id" name="labId" class="form-control" onchange="this.form.submit()">
                @foreach(var lab in groupScoreboard.Labs)
                {
                    <option value="@lab.LabId" selected="@(groupScoreboard.LabId == lab.LabId)">
                        @lab.Name
                        @if(lab.Active)
                        {
                            @:(aktiv)
                        }
                    </option>
                }
            </select>
        </div>

        <button type="submit" class="btn btn-primary">
            <span class="oi oi-reload"></span>
            Zu ausgewähltem Praktikum wechseln
        </button>
    </form>
}