@using Ctf4e.Server.Controllers
@using Ctf4e.Server.Models
@using Ctf4e.Server.ViewModels
@{
    ViewData["Title"] = "Admin-Scoreboard";

    var currentUser = (User)ViewData["CurrentUser"];

    var adminScoreboard = (AdminScoreboard)ViewData["Scoreboard"];
}

<div class="row align-items-center">
    <div class="col text-left">
        <h3 class="text-primary">
            Admin-Scoreboard
        </h3>
    </div>
    <div class="col text-right">
        <a class="text-primary" href="#flags-table">
            Flags
            <span class="oi oi-caret-bottom" style="vertical-align: middle"></span>
        </a>
    </div>
</div>
<hr class="bg-primary mb-2 mt-2" style="height: 2px;">

<form action="@(Url.Action<AdminScoreboardController>(nameof(AdminScoreboardController.RenderScoreboardAsync)))" method="get">
    <div class="form-group">
        <label for="input-lab-id">Praktikum</label>
        <select id="input-lab-id" name="labId" asp-items="@new SelectList(adminScoreboard.Labs, nameof(Lab.Id), nameof(Lab.Name), adminScoreboard.LabId)" class="form-control">
            <option value="" disabled selected>Praktikum auswählen</option>
        </select>
    </div>
    <div class="form-group">
        <label for="input-slot-id">Terminslot</label>
        <select id="input-slot-id" name="slotId" asp-items="@new SelectList(adminScoreboard.Slots, nameof(Slot.Id), nameof(Slot.Name), adminScoreboard.SlotId)" class="form-control">
            <option value="" disabled selected>Slot auswählen</option>
        </select>
    </div>
    <button type="submit" class="btn btn-primary">Scoreboard anzeigen</button>
</form>

<hr class="bg-primary mt-2 mb-2" style="height: 2px">

@foreach(var user in adminScoreboard.UserEntries)
{
    <div class="card">
    <div class="card-header" id="user@(user.UserId)-card-heading" style="cursor: pointer" data-toggle="collapse" data-target="#user@(user.UserId)-card">
        <div class="row">
            <div class="col-sm text-left">
                @if(adminScoreboard.PassAsGroup)
                {
                    <span class="oi oi-people text-dark" title="Bestehen als Gruppe"></span>
                }
                else
                {
                    <span class="oi oi-person text-dark" title="Bestehen als Einzelperson"></span>
                }
                @if(user.HasPassed)
                {
                    <span class="oi oi-circle-check text-success" title="Bestanden"></span>
                }
                else
                {
                    <span class="oi oi-circle-x text-danger" title="Nicht bestanden"></span>
                }
                <span class="ml-2">@user.UserName</span>
            </div>
            <div class="col-sm text-right">
                @if(user.Status == ScoreboardGroupStatus.BeforePreStart)
                {
                    <span class="badge badge-info" title="Warten auf Vor-Beginn-Phase">Vor Praktikum-Vor-Beginn</span>
                }
                else if(user.Status == ScoreboardGroupStatus.PreStart)
                {
                    <span class="badge badge-warning" title="Vor-Beginn-Phase aktiv">Vor-Beginn-Phase</span>
                }
                else if(user.Status == ScoreboardGroupStatus.Start)
                {
                    <span class="badge badge-warning" title="Praktikum aktiv">Praktikum aktiv</span>
                }
                else if(user.Status == ScoreboardGroupStatus.End)
                {
                    <span class="badge badge-success" title="Praktikum beendet">Praktikum beendet</span>
                }
                else if(user.Status == ScoreboardGroupStatus.Undefined)
                {
                    <span class="badge badge-danger" title="Keine Praktikumsausführung konfiguriert">Nicht konfiguriert</span>
                }
                <span class="badge badge-primary" title="Pflichtaufgaben">@user.PassedMandatoryExercisesCount / @adminScoreboard.MandatoryExercisesCount</span>
                <span class="badge badge-secondary" title="Freiwillige Aufgaben">@user.PassedOptionalExercisesCount / @adminScoreboard.OptionalExercisesCount</span>
                <span class="badge badge-info" title="Gefundene Flags">@user.FoundFlagsCount / @adminScoreboard.FlagCount</span>
            </div>
        </div>
    </div>
    <div id="user@(user.UserId)-card" class="collapse">
        <div class="card-body">
            <a class="btn btn-primary mb-3" href="@(Url.Action<AdminScoreboardController>(nameof(AdminScoreboardController.CallLabServerAsync), new { labId = adminScoreboard.LabId, userId = user.UserId }))" target="_blank">
                <span class="oi oi-external-link"></span>
                Zum Praktikumsserver (Admin-Modus)
            </a>

            @foreach(var exercise in user.Exercises)
            {
                <div class="card">
                    <div class="card-header" id="user@(user.UserId)-exercise@(exercise.Exercise.Id)-card-heading" style="cursor: pointer" data-toggle="collapse" data-target="#user@(user.UserId)-exercise@(exercise.Exercise.Id)-card">
                        <div class="row">
                            <div class="col-sm text-left">
                                @exercise.Exercise.Name
                                @if(exercise.Exercise.IsMandatory)
                                {
                                    <span class="badge badge-info">Pflicht</span>
                                }
                            </div>
                            <div class="col-sm text-right">
                                <span class="badge badge-light" title="Gültige Versuche (Versuche insgesamt)">@exercise.ValidTries (@exercise.Tries) Versuche</span>
                                @if(exercise.Passed)
                                {
                                    <span class="badge badge-primary">@exercise.Points Punkte</span>
                                    <span class="oi oi-circle-check text-success" title="Gelöst"></span>
                                }
                                else
                                {
                                    <span class="oi oi-circle-x text-danger" title="Nicht gelöst"></span>
                                }
                            </div>
                        </div>
                    </div>
                    <div id="user@(user.UserId)-exercise@(exercise.Exercise.Id)-card" class="collapse">
                        <div class="card-body">
                            <table class="table table-sm">
                                <thead>
                                <tr>
                                    <th></th>
                                    <th scope="col">Gelöst</th>
                                    <th scope="col">Zeit</th>
                                    <th scope="col">Gewichtung</th>
                                    @if(adminScoreboard.PassAsGroup)
                                    {
                                        <th scope="col">Eingereicht von</th>
                                    }
                                    @if(currentUser.IsAdmin)
                                    {
                                        <th>
                                            <a role="button" class="btn btn-sm btn-primary" href="#" data-toggle="modal" data-target="#modal-add-exercise-submission" data-exercise-id="@exercise.Exercise.Id" data-user-id="@user.UserId">
                                                <span class="oi oi-plus"></span>
                                                Hinzufügen
                                            </a>
                                        </th>
                                    }
                                </tr>
                                </thead>
                                <tbody>
                                @foreach(var submission in exercise.Submissions)
                                {
                                    <tr>
                                        <th scope="row">#@submission.Id</th>
                                        <td>
                                            @if(submission.ExercisePassed)
                                            {
                                                <span class="oi oi-circle-check text-success align-middle"></span>
                                            }
                                            else
                                            {
                                                <span class="oi oi-circle-x text-danger align-middle"></span>
                                            }
                                        </td>
                                        <td>
                                            @submission.SubmissionTime.ToString(DateTimeFormats.DateAndTimeSeconds)
                                        </td>
                                        <td>
                                            @submission.Weight
                                        </td>
                                        @if(adminScoreboard.PassAsGroup)
                                        {
                                            <td>
                                                @adminScoreboard.UserNames[submission.UserId]
                                            </td>
                                        }
                                        @if(currentUser.IsAdmin)
                                        {
                                            <td>
                                                <a role="button" class="btn btn-sm btn-danger" href="#" data-toggle="modal" data-target="#modal-delete-exercise-submission" data-submission-id="@submission.Id" data-exercise-name="@exercise.Exercise.Name" data-user-name="@user.UserName">
                                                    <span class="oi oi-trash"></span>
                                                    Löschen
                                                </a>
                                            </td>
                                        }
                                    </tr>
                                }
                                </tbody>
                            </table>
                        </div>
                    </div>
                </div>
            }

            <table class="table table-sm mt-3">
                <thead>
                <tr>
                    <th>Flag</th>
                    <th scope="col">Beschreibung</th>
                    <th scope="col">Abgesendet</th>
                    <th scope="col">Gültig</th>
                    @if(currentUser.IsAdmin)
                    {
                        <th scope="col">Aktionen</th>
                    }
                </tr>
                </thead>
                <tbody>
                @foreach(var flag in user.Flags)
                {
                    <tr>
                        <th scope="row">#@flag.Flag.Id</th>
                        <td>
                            @flag.Flag.Description
                            @if(flag.Flag.IsBounty)
                            {
                                <span class="oi oi-bug text-primary" title="Bug-Bounty"></span>
                            }
                        </td>
                        <td>
                            @if(flag.Submitted)
                            {
                                <span class="oi oi-check text-success" title="@flag.SubmissionTime.ToString(DateTimeFormats.DateAndTimeSeconds)"></span>
                            }
                        </td>
                        <td>
                            @if(flag.Submitted)
                            {
                                if(flag.Valid)
                                {
                                    <span class="oi oi-check text-success"></span>
                                    <span class="badge badge-primary">@flag.CurrentPoints Punkte</span>
                                }
                                else
                                {
                                    <span class="oi oi-x text-danger"></span>
                                }
                            }
                        </td>
                        @if(currentUser.IsAdmin)
                        {
                            <td>
                                @if(flag.Submitted)
                                {
                                    <a role="button" class="btn btn-sm btn-danger" href="#" data-toggle="modal" data-target="#modal-delete-flag-submission" data-flag-id="@flag.Flag.Id" data-user-id="@user.UserId" data-user-name="@user.UserName">
                                        <span class="oi oi-trash"></span>
                                        Zurücksetzen
                                    </a>
                                }
                                else
                                {
                                    <a role="button" class="btn btn-sm btn-success" href="#" data-toggle="modal" data-target="#modal-add-flag-submission" data-flag-id="@flag.Flag.Id" data-user-id="@user.UserId">
                                        <span class="oi oi-flag"></span>
                                        Einreichen
                                    </a>
                                }
                            </td>
                        }
                    </tr>
                }
                </tbody>
            </table>
        </div>
    </div>
    </div>
}

<h3 class="text-primary mt-5">
    Flags (alle Terminslots)
</h3>
<hr class="bg-primary mb-2" style="height: 2px">

<table class="table table-sm" id="flags-table">
    <thead>
    <tr>
        <th></th>
        <th scope="col">Beschreibung</th>
        <th scope="col">Funde</th>
        <th scope="col">Punkte</th>
    </tr>
    </thead>
    <tbody>
    @foreach(var flag in adminScoreboard.Flags)
    {
        <tr>
            <th scope="row">#@flag.Flag.Id</th>
            <td>
                @flag.Flag.Description
                @if(flag.Flag.IsBounty)
                {
                    <span class="oi oi-bug text-primary" title="Bug-Bounty"></span>
                }
            </td>
            <td>
                @flag.SubmissionCount
            </td>
            <td>
                @flag.CurrentPoints / @flag.Flag.BasePoints
            </td>
        </tr>
    }
    </tbody>
</table>

<!-- Necessary includes -->

@section ScriptsHead
{
    <link href="~/lib/flatpickr/css/flatpickr.min.css" rel="stylesheet" />
    <script src="~/lib/flatpickr/js/flatpickr.min.js"></script>
    <script src="~/lib/flatpickr/js/l10n/de.js"></script>
}

<!-- Exercise and Flag submission modals -->
<div class="modal fade" id="modal-delete-exercise-submission" tabindex="-1" role="dialog">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">Aufgabeneinreichung löschen</h5>
                <button type="button" class="close" data-dismiss="modal">
                    <span>&times;</span>
                </button>
            </div>
            <div class="modal-body">
                <p>
                    Wollen Sie die Einreichung von &quot;<span data-replace="user-name"></span>&quot; zur Aufgabe &quot;<span data-replace="exercise-name"></span>&quot; wirklich löschen?
                </p>
            </div>
            <div class="modal-footer">
                <form action="@(Url.Action<AdminScoreboardController>(nameof(AdminScoreboardController.DeleteExerciseSubmissionAsync), new { labId = adminScoreboard.LabId, slotId = adminScoreboard.SlotId }))" method="post">
                    <input type="hidden" data-replace="submission-id" name="submissionId" value="">

                    @Html.AntiForgeryToken()
                    <button type="submit" class="btn btn-outline-danger">Einreichung löschen</button>
                    <button type="button" class="btn btn-secondary" data-dismiss="modal">Abbrechen</button>
                </form>
            </div>
        </div>
    </div>
</div>
<div class="modal fade" id="modal-add-exercise-submission" tabindex="-1" role="dialog">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <form action="@(Url.Action<AdminScoreboardController>(nameof(AdminScoreboardController.CreateExerciseSubmissionAsync), new { labId = adminScoreboard.LabId, slotId = adminScoreboard.SlotId }))" method="post">
                <div class="modal-header">
                    <h5 class="modal-title">Aufgabeneinreichung erstellen</h5>
                    <button type="button" class="close" data-dismiss="modal">
                        <span>&times;</span>
                    </button>
                </div>
                <div class="modal-body">
                    <div class="form-group">
                        <label for="input-add-exercise-submission-time">Einreichungszeitpunkt</label>
                        <input id="input-add-exercise-submission-time" name="submissionTime" type="text" class="form-control" value="@DateTime.Now.ToString(DateTimeFormats.DateAndTimeMinutes)" />
                    </div>
                    <div class="form-group">
                        <label for="input-add-exercise-submission-weight">Gewichtung (nur für Fehlversuche)</label>
                        <input id="input-add-exercise-submission-weight" name="weight" type="number" min="0" value="1" class="form-control" />
                    </div>
                    <div class="form-group">
                        <div class="form-check">
                            <input id="input-add-exercise-submission-passed" type="checkbox" name="passed" class="form-check-input" checked value="true">
                            <label for="input-add-exercise-submission-passed" class="form-check-label">Bestanden</label>
                        </div>
                    </div>
                </div>
                <div class="modal-footer">
                    <input type="hidden" data-replace="exercise-id" name="exerciseId" value="">
                    <input type="hidden" data-replace="user-id" name="userId" value="">

                    @Html.AntiForgeryToken()
                    <button type="submit" class="btn btn-outline-primary">Einreichung erstellen</button>
                    <button type="button" class="btn btn-secondary" data-dismiss="modal">Abbrechen</button>
                </div>
            </form>
        </div>
    </div>
</div>
<div class="modal fade" id="modal-delete-flag-submission" tabindex="-1" role="dialog">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">Flageinreichung löschen</h5>
                <button type="button" class="close" data-dismiss="modal">
                    <span>&times;</span>
                </button>
            </div>
            <div class="modal-body">
                <p>
                    Wollen Sie die Flag-Einreichung von &quot;<span data-replace="user-name"></span>&quot; wirklich löschen?
                </p>
            </div>
            <div class="modal-footer">
                <form action="@(Url.Action<AdminScoreboardController>(nameof(AdminScoreboardController.DeleteFlagSubmissionAsync), new { labId = adminScoreboard.LabId, slotId = adminScoreboard.SlotId }))" method="post">
                    <input type="hidden" data-replace="user-id" name="userId" value="">
                    <input type="hidden" data-replace="flag-id" name="flagId" value="">

                    @Html.AntiForgeryToken()
                    <button type="submit" class="btn btn-outline-danger">Einreichung löschen</button>
                    <button type="button" class="btn btn-secondary" data-dismiss="modal">Abbrechen</button>
                </form>
            </div>
        </div>
    </div>
</div>
<div class="modal fade" id="modal-add-flag-submission" tabindex="-1" role="dialog">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <form action="@(Url.Action<AdminScoreboardController>(nameof(AdminScoreboardController.CreateFlagSubmissionAsync), new { labId = adminScoreboard.LabId, slotId = adminScoreboard.SlotId }))" method="post">
                <div class="modal-header">
                    <h5 class="modal-title">Flageinreichung erstellen</h5>
                    <button type="button" class="close" data-dismiss="modal">
                        <span>&times;</span>
                    </button>
                </div>
                <div class="modal-body">
                    <div class="form-group">
                        <label for="input-add-flag-submission-time">Einreichungszeitpunkt</label>
                        <input id="input-add-flag-submission-time" name="submissionTime" type="text" class="form-control" value="@DateTime.Now.ToString(DateTimeFormats.DateAndTimeMinutes)" />
                    </div>
                </div>
                <div class="modal-footer">
                    <input type="hidden" data-replace="user-id" name="userId" value="">
                    <input type="hidden" data-replace="flag-id" name="flagId" value="">

                    @Html.AntiForgeryToken()
                    <button type="submit" class="btn btn-outline-primary">Einreichung erstellen</button>
                    <button type="button" class="btn btn-secondary" data-dismiss="modal">Abbrechen</button>
                </div>
            </form>
        </div>
    </div>
</div>

<script>
    // Date time picker
    flatpickr.localize(flatpickr.l10ns.de);                               
    options = {
                 "dateFormat": "d.m.Y H:i",
                 "enableTime": true,
                 "allowInput": true
             };
    flatpickr(document.getElementById("input-add-exercise-submission-time"), options);
    flatpickr(document.getElementById("input-add-flag-submission-time"), options);

    // Modals
    $('#modal-delete-exercise-submission').on('show.bs.modal', function (e) {
        let submissionId = $(e.relatedTarget).data('submission-id');
        let userName = $(e.relatedTarget).data('user-name');
        let exerciseName = $(e.relatedTarget).data('exercise-name');
        $(e.currentTarget).find('span[data-replace="user-name"]').text(userName);
        $(e.currentTarget).find('span[data-replace="exercise-name"]').text(exerciseName);
        $(e.currentTarget).find('input[data-replace="submission-id"]').val(submissionId);
    });
    $('#modal-add-exercise-submission').on('show.bs.modal', function (e) {
        let exerciseId = $(e.relatedTarget).data('exercise-id');
        let userId = $(e.relatedTarget).data('user-id');
        $(e.currentTarget).find('input[data-replace="exercise-id"]').val(exerciseId);
        $(e.currentTarget).find('input[data-replace="user-id"]').val(userId);
    });
    $('#modal-delete-flag-submission').on('show.bs.modal', function (e) {
        let flagId = $(e.relatedTarget).data('flag-id');
        let userId = $(e.relatedTarget).data('user-id');
        let userName = $(e.relatedTarget).data('user-name');
        $(e.currentTarget).find('input[data-replace="flag-id"]').val(flagId);
        $(e.currentTarget).find('input[data-replace="user-id"]').val(userId);
        $(e.currentTarget).find('span[data-replace="user-name"]').text(userName);
    });
    $('#modal-add-flag-submission').on('show.bs.modal', function (e) {
        let flagId = $(e.relatedTarget).data('flag-id');
        let userId = $(e.relatedTarget).data('user-id');
        $(e.currentTarget).find('input[data-replace="flag-id"]').val(flagId);
        $(e.currentTarget).find('input[data-replace="user-id"]').val(userId);
    });
</script>

@if(currentUser.IsAdmin)
{
    <h3 class="text-primary mt-5">
        Synchronisation mit externen Systemen
    </h3>
    <hr class="bg-primary mb-2" style="height: 2px">

    <a class="btn btn-primary mb-2" href="@(Url.Action<AdminScoreboardController>(nameof(AdminScoreboardController.DownloadAsCsvAsync)))">
        <span class="oi oi-data-transfer-download"></span>
        Ergebnisse als CSV herunterladen
    </a>

    <a class="btn btn-warning mb-2" href="#" onclick="sync_moodle()">
        <span class="oi oi-transfer"></span>
        Ergebnisse in Moodlekurs hochladen
    </a>

    <div class="modal fade" id="modal-sync-moodle" tabindex="-1" role="dialog">
        <div class="modal-dialog" role="document">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title">Ergebnisse in Moodlekurs hochladen</h5>
                    <button type="button" class="close" data-dismiss="modal">
                        <span>&times;</span>
                    </button>
                </div>
                <div class="modal-body">
                    <p>
                        Dieses Kommando lädt die kompletten Kursergebnisse über die API in den angebundenen Moodlekurs hoch.
                    </p>
                    <p>
                        <strong>Achtung:</strong> Dieser Vorgang dauert einige Zeit, und sollte nicht unterbrochen werden.
                    </p>
                </div>
                <div class="modal-footer">
                    <form method="post" action="@(Url.Action<AdminScoreboardController>(nameof(AdminScoreboardController.UploadToMoodleAsync)))">
                        @Html.AntiForgeryToken()
                        <button type="submit" class="btn btn-outline-warning">Ergebnisse hochladen</button>
                        <button type="button" class="btn btn-primary" data-dismiss="modal">Abbrechen</button>
                    </form>
                </div>
            </div>
        </div>
    </div>

    <script>
        function sync_moodle() {
            $("#modal-sync-moodle").modal();
        }
    </script>
}