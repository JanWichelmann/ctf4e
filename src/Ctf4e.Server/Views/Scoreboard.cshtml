@using Ctf4e.Server.Controllers
@using Ctf4e.Server.Models
@using Ctf4e.Server.ViewModels
@using Microsoft.AspNetCore.Mvc.Localization
@using Ctf4e.Server.Authorization
@using Ctf4e.Server.Services
@inject IViewLocalizer Localizer
@inject IUserService UserService;
@{
    ViewData["Title"] = "Scoreboard";

    var viewType = (ScoreboardController.ViewType)ViewData["ViewType"];

    var labs = (List<Lab>)ViewData["Labs"];
    var slots = (List<Slot>)ViewData["Slots"];

    var scoreboard = ViewData.ContainsKey("Scoreboard") ? (Scoreboard)ViewData["Scoreboard"] : null;
    bool showAllEntries = ViewData.ContainsKey("ShowAllEntries") && (bool)ViewData["ShowAllEntries"];
    bool resetCache = ViewData.ContainsKey("ResetCache") && (bool)ViewData["ResetCache"];

    var currentUser = (User)ViewData["CurrentUser"];

    // User list, only used when "show all entries" is set
    Dictionary<int, IEnumerable<User>> users = new();
    if(showAllEntries)
    {
        users = (await UserService.GetUsersAsync().ToListAsync())
            .Where(u => u.GroupId != null)
            .GroupBy(u => u.GroupId)
            .ToDictionary(u => u.Key!.Value, u => u.Select(ug => ug));
    }
}

<div class="container">
@if(viewType == ScoreboardController.ViewType.Blank)
{
    <!-- Status messages only -->
}
else if(viewType == ScoreboardController.ViewType.Scoreboard && scoreboard != null)
{
    <h1 class="header">
        @if(scoreboard.AllLabs)
        {
            @Localizer["Title:ScoreboardAll"]
        }
        else
        {
            @Localizer["Title:ScoreboardLab", labs.First(l => l.Id == scoreboard.LabId).Name]
        }
    </h1>
    <h2 class="subheader">
        @if(scoreboard.SlotId == null)
        {
            @Localizer["Title:AllSlots"]
        }
        else
        {
            @Localizer["Title:Slot", slots.First(s => s.Id == scoreboard.SlotId).Name]
        }
    </h2>
    <hr class="header">

    <table class="table table-sm text-nowrap mt-4" id="flags-table">
        <thead>
        <tr>
            <th style="min-width: 5%;" scope="col">#</th>
            <th style="min-width: 10%;" scope="col">@Localizer["Scoreboard:Points"]</th>
            <th style="min-width: 10%;" scope="col">@Localizer["Scoreboard:Flags"]</th>
            <th style="min-width: 5%;" scope="col"></th>
            <th style="max-width: 70%;" scope="col">@Localizer["Scoreboard:Group"]</th>
            <th scope="col"></th>
            <th scope="col"></th>
        </tr>
        </thead>
        <tbody class="table-group-divider">
        @{
            int lastRank = 0;
            int entryCount = 0;
            bool currentGroupShown = false;
        }
        @foreach(var entry in scoreboard.Entries)
        {
            if(entryCount >= scoreboard.MaximumEntryCount && entry.Rank != lastRank && !showAllEntries)
            {
                break;
            }
            bool isCurrentGroup = entry.GroupId == currentUser.GroupId;
            currentGroupShown |= isCurrentGroup;
            <tr class="@(isCurrentGroup ? "table-active" : "")">
                <th scope="row">
                    @if(entry.Rank != lastRank)
                    {
                        @entry.Rank
                        @if(entry.Rank == 1)
                        {
                            <i class="bi bi-award-fill" style="color: rgb(255, 204, 1);"></i>
                        }
                        else if(entry.Rank == 2)
                        {
                            <i class="bi bi-award-fill" style="color: rgb(180, 184, 188);"></i>
                        }
                        else if(entry.Rank == 3)
                        {
                            <i class="bi bi-award-fill" style="color: rgb(209, 166, 132);"></i>
                        }
                    }
                </th>
                <td>
                    <span class="cursor-help" title="@Localizer["Scoreboard:LastSubmission", entry.LastSubmissionTime.ToString(DateTimeFormats.DateAndTimeSeconds)]">
                        @entry.TotalPoints
                    </span>
                    @if(isCurrentGroup && !showAllEntries)
                    {
                        <span class="text-muted">
                            @if(entry.BugBountyPoints == 0)
                            {
                                @Localizer["Scoreboard:DetailedPoints", entry.ExercisePoints, entry.FlagPoints]
                            }
                            else
                            {
                                @Localizer["Scoreboard:DetailedPointsWithBugs", entry.ExercisePoints, entry.FlagPoints, entry.BugBountyPoints]
                            }
                        </span>
                    }
                    @if(entry.BugBountyPoints > 0 && !scoreboard.AllLabs)
                    {
                        <i class="bi bi-bug-fill text-primary" title="@Localizer["Scoreboard:GotBugBounty"]"></i>
                    }
                </td>
                <td>
                    @entry.FlagCount
                </td>
                <td>
                    @if(entry.GroupAnnotation != null)
                    {
                        <span title="@(entry.GroupAnnotationHoverText ?? "")" class="cursor-help">@entry.GroupAnnotation</span>
                    }
                </td>
                <td>
                    @if(showAllEntries)
                    {
                        // Offer tooltip with user names
                        string userNames = "";
                        foreach(var user in users[entry.GroupId])
                        {
                            if(userNames == "")
                                userNames = user.DisplayName;
                            else
                                userNames += ", " + user.DisplayName;
                        }

                        <span title="@userNames" class="cursor-help">
                            @entry.GroupName
                        </span>
                    }
                    else
                    {
                        @entry.GroupName
                    }
                </td>
                <td>
                    @if(showAllEntries)
                    {
                        <span class="badge bg-opacity-100 bg-secondary cursor-help" style="min-width: 3rem" title="@Localizer["Scoreboard:AllEntries:ExercisePoints"]">
                            @entry.ExercisePoints
                        </span>
                        <span class="badge bg-opacity-75 bg-secondary cursor-help" style="min-width: 3rem" title="@Localizer["Scoreboard:AllEntries:FlagPoints"]">
                            @entry.FlagPoints
                        </span>
                        @if(entry.BugBountyPoints != 0)
                        {
                            <span class="badge bg-opacity-75 bg-secondary cursor-help" style="min-width: 3rem" title="@Localizer["Scoreboard:AllEntries:BugBountyPoints"]">
                                @entry.BugBountyPoints
                            </span>
                        }
                    }
                </td>
                <td class="text-end">
                    @if(showAllEntries)
                    {
                        if(currentUser.Privileges.HasPrivileges(UserPrivileges.EditGroups))
                        {
                            <a asp-controller="AdminGroups" asp-action="ShowEditGroupForm" asp-route-id="@entry.GroupId" class="text-decoration-none" title="@Localizer["Scoreboard:EditGroup"]">
                                <i class="bi bi-pencil"></i>
                            </a>
                        }
                        if(currentUser.Privileges.HasPrivileges(UserPrivileges.ViewAdminScoreboard))
                        {
                            <a asp-controller="AdminScoreboard" asp-action="RenderScoreboard" asp-route-labId="@scoreboard.LabId" asp-route-slotId="@scoreboard.SlotId" asp-route-groupMode="true" asp-fragment="@("group" + entry.GroupId)" class="text-decoration-none" title="@Localizer["Scoreboard:AdminScoreboard:Group"]">
                                <i class="bi bi-bookmark-star"></i>
                            </a>
                        }
                    }
                </td>
            </tr>
            ++entryCount;
            lastRank = entry.Rank;
        }
        @if(!currentGroupShown && currentUser.GroupId != null)
        {
            var entry = scoreboard.Entries.FirstOrDefault(e => e.GroupId == currentUser.GroupId);
            if(entry != null)
            {
                <tr class="table-active">
                    <th scope="row">
                        @entry.Rank
                    </th>
                    <td>
                        <span class="cursor-help" title="@Localizer["Scoreboard:LastSubmission", entry.LastSubmissionTime.ToString(DateTimeFormats.DateAndTimeSeconds)]">
                            @entry.TotalPoints
                        </span>
                        <span class="text-muted">
                            @if(entry.BugBountyPoints == 0)
                            {
                                @Localizer["Scoreboard:DetailedPoints", entry.ExercisePoints, entry.FlagPoints]
                            }
                            else
                            {
                                @Localizer["Scoreboard:DetailedPointsWithBugs", entry.ExercisePoints, entry.FlagPoints, entry.BugBountyPoints]
                            }
                        </span>
                        @if(entry.BugBountyPoints > 0 && !scoreboard.AllLabs)
                        {
                            <i class="bi bi-bug-fill text-primary" title="@Localizer["Scoreboard:GotBugBounty"]"></i>
                        }
                    </td>
                    <td>
                        @entry.FlagCount
                    </td>
                    <td>
                        @if(entry.GroupAnnotation != null)
                        {
                            <span title="@(entry.GroupAnnotationHoverText ?? "")" class="cursor-help">@entry.GroupAnnotation</span>
                        }
                    </td>
                    <td>
                        @entry.GroupName
                    </td>
                    <td></td>
                    <td></td>
                </tr>
            }
        }
        </tbody>
    </table>
}

<hr class="header-secondary mt-4">

<form asp-controller="Scoreboard" asp-action="RenderScoreboard" method="get">
    @{
        // Handle visible/hidden labs
        IEnumerable<Lab> filteredLabs;
        if(currentUser.Privileges.HasPrivileges(UserPrivileges.ViewAdminScoreboard))
        {
            filteredLabs = labs.OrderBy(l => l.Name).ToList();
            foreach(var l in filteredLabs)
            {
                if(!l.Visible)
                {
                    l.Name += " " + Localizer.GetString("SelectScoreboard:HiddenLab");
                }
            }
        }
        else
        {
            filteredLabs = labs.Where(l => l.Visible).OrderBy(l => l.Name).ToList();
        }
    }
    <div class="mb-3">
        <label class="form-label" for="input-lab-id">@Localizer["SelectScoreboard"]</label>
        <select id="input-lab-id" name="labId" asp-items="@(new SelectList(filteredLabs, nameof(Lab.Id), nameof(Lab.Name), scoreboard?.LabId))" class="form-select">
            <option value="" selected>@Localizer["AllLabs"]</option>
        </select>
    </div>
    <div class="mb-3">
        <label class="form-label" for="input-slot-id">@Localizer["SelectSlot"]</label>
        <select id="input-slot-id" name="slotId" asp-items="@(new SelectList(slots, nameof(Slot.Id), nameof(Slot.Name), scoreboard?.SlotId))" class="form-select">
            <option value="" selected>@Localizer["AllSlots"]</option>
        </select>
    </div>
    @if(currentUser.Privileges.HasPrivileges(UserPrivileges.ViewAdminScoreboard))
    {
        <div class="mb-3">
            <label class="form-label" for="input-reload">
                @Localizer["AutoReload"]
            </label>
            <input type="number" min="0" max="3600" name="reload" value="0" id="input-reload" class="form-control">
        </div>
    }
    @if(currentUser.Privileges.HasPrivileges(UserPrivileges.ViewAdminScoreboard))
    {
        <div class="mb-3">
            <div class="form-check">
                <input type="checkbox" id="input-showAllEntries" name="showAllEntries" class="form-check-input" value="true" checked="@(showAllEntries)">
                <label for="input-showAllEntries" class="form-check-label">
                    @Localizer["ShowAllEntries"]
                </label>
            </div>
        </div>
    }
    @if(currentUser.Privileges.HasPrivileges(UserPrivileges.Admin))
    {
        <div class="mb-3">
            <div class="form-check">
                <input type="checkbox" id="input-resetCache" name="resetCache" class="form-check-input" value="true" checked="@(resetCache)">
                <label for="input-resetCache" class="form-check-label">
                    @Localizer["ResetCache"]
                </label>
            </div>
        </div>
    }

    <button type="submit" class="btn btn-primary">
        <i class="bi bi-arrow-return-right"></i>
        @Localizer["ShowSelectedScoreboard"]
    </button>
</form>
</div>