@using Ctf4e.Server.Controllers
@using Ctf4e.Server.Models
@using Ctf4e.Server.ViewModels
@using Microsoft.AspNetCore.Mvc.Localization
@inject IViewLocalizer Localizer
@{
    ViewData["Title"] = "Scoreboard";

    var viewType = (ScoreboardController.ViewType)ViewData["ViewType"];

    var labs = (List<Lab>)ViewData["Labs"];
    var slots = (List<Slot>)ViewData["Slots"];

    var scoreboard = ViewData.ContainsKey("Scoreboard") ? (Scoreboard)ViewData["Scoreboard"] : null;
    bool showAllEntries = ViewData.ContainsKey("ShowAllEntries") && (bool)ViewData["ShowAllEntries"];
    bool resetCache = ViewData.ContainsKey("ResetCache") && (bool)ViewData["ResetCache"];

    var currentUser = (User)ViewData["CurrentUser"];
}

<div class="container">
    @if(viewType == ScoreboardController.ViewType.Blank)
    {
        <!-- Status messages only -->
    }
    else if(viewType == ScoreboardController.ViewType.Scoreboard && scoreboard != null)
    {
        <h3 class="header">
            @if(scoreboard.AllLabs)
            {
                @Localizer["Title:ScoreboardAll"]
            }
            else
            {
                @Localizer["Title:ScoreboardLab", labs.First(l => l.Id == scoreboard.LabId).Name]
            }
        </h3>
        <h5 class="subheader">
            @if(scoreboard.SlotId == null)
            {
                @Localizer["Title:AllSlots"]
            }
            else
            {
                @Localizer["Title:Slot", slots.First(s => s.Id == scoreboard.SlotId).Name]
            }
        </h5>
        <hr class="header">

        <table class="table table-sm" id="flags-table">
            <thead>
            <tr>
                <th scope="col">#</th>
                <th scope="col">@Localizer["Scoreboard:Points"]</th>
                <th scope="col">@Localizer["Scoreboard:Flags"]</th>
                <th scope="col">@Localizer["Scoreboard:Group"]</th>
            </tr>
            </thead>
            <tbody>
            @{
                int lastRank = 0;
                int entryCount = 0;
                bool currentGroupShown = false;
            }
            @foreach(var entry in scoreboard.Entries)
            {
                if(entryCount >= scoreboard.MaximumEntryCount && entry.Rank != lastRank && !showAllEntries)
                {
                    break;
                }
                bool isCurrentGroup = entry.GroupId == currentUser.GroupId;
                currentGroupShown |= isCurrentGroup;
                <tr class="@(isCurrentGroup ? "table-active" : "")">
                    <th scope="row">
                        @if(entry.Rank != lastRank)
                        {
                            @entry.Rank
                            @if(entry.Rank == 1)
                            {
                                <i class="bi bi-award-fill" style="color: rgb(255, 204, 1);"></i>
                            }
                            else if(entry.Rank == 2)
                            {
                                <i class="bi bi-award-fill" style="color: rgb(180, 184, 188);"></i>
                            }
                            else if(entry.Rank == 3)
                            {
                                <i class="bi bi-award-fill" style="color: rgb(209, 166, 132);"></i>
                            }
                        }
                    </th>
                    <td title="@Localizer["Scoreboard:LastSubmission", entry.LastSubmissionTime.ToString(DateTimeFormats.DateAndTimeSeconds)]">
                        @entry.TotalPoints
                        @if(isCurrentGroup || currentUser.IsAdmin || currentUser.IsTutor)
                        {
                            <span class="text-muted">
                                @if(entry.BugBountyPoints == 0)
                                {
                                    @Localizer["Scoreboard:DetailedPoints", entry.ExercisePoints, entry.FlagPoints]
                                }
                                else
                                {
                                    @Localizer["Scoreboard:DetailedPointsWithBugs", entry.ExercisePoints, entry.FlagPoints, entry.BugBountyPoints]
                                }
                            </span>
                        }
                        @if(entry.BugBountyPoints > 0 && !scoreboard.AllLabs)
                        {
                            <i class="bi bi-bug-fill text-primary" title="@Localizer["Scoreboard:GotBugBounty"]"></i>
                        }
                    </td>
                    <td>
                        @entry.FlagCount
                    </td>
                    <td>
                        @entry.GroupName
                    </td>
                </tr>
                ++entryCount;
                lastRank = entry.Rank;
            }
            @if(!currentGroupShown && currentUser.GroupId != null)
            {
                var entry = scoreboard.Entries.FirstOrDefault(e => e.GroupId == currentUser.GroupId);
                if(entry != null)
                {
                    <tr class="table-active">
                        <th scope="row">
                            @entry.Rank
                        </th>
                        <td title="@Localizer["Scoreboard:LastSubmission", entry.LastSubmissionTime.ToString(DateTimeFormats.DateAndTimeSeconds)]">
                            @entry.TotalPoints
                            <span class="text-muted">
                                @if(entry.BugBountyPoints == 0)
                                {
                                    @Localizer["Scoreboard:DetailedPoints", entry.ExercisePoints, entry.FlagPoints]
                                }
                                else
                                {
                                    @Localizer["Scoreboard:DetailedPointsWithBugs", entry.ExercisePoints, entry.FlagPoints, entry.BugBountyPoints]
                                }
                            </span>
                            @if(entry.BugBountyPoints > 0 && !scoreboard.AllLabs)
                            {
                                <i class="bi bi-bug-fill text-primary" title="@Localizer["Scoreboard:GotBugBounty"]"></i>
                            }
                        </td>
                        <td>
                            @entry.FlagCount
                        </td>
                        <td>
                            @entry.GroupName
                        </td>
                    </tr>
                }
            }
            </tbody>
        </table>
    }

    <hr class="header-secondary">

    <form asp-controller="Scoreboard" asp-action="RenderScoreboard" method="get">
        @{
            // Handle visible/hidden labs
            IEnumerable<Lab> filteredLabs;
            if(currentUser.IsAdmin || currentUser.IsTutor)
            {
                filteredLabs = labs.OrderBy(l => l.Name).ToList();
                foreach(var l in filteredLabs)
                {
                    if(!l.Visible)
                    {
                        l.Name += " " + Localizer.GetString("SelectScoreboard:HiddenLab");
                    }
                }
            }
            else
            {
                filteredLabs = labs.Where(l => l.Visible).OrderBy(l => l.Name).ToList();
            }
        }
        <div class="mb-3">
            <label class="form-label" for="input-lab-id">@Localizer["SelectScoreboard"]</label>
            <select id="input-lab-id" name="labId" asp-items="@(new SelectList(filteredLabs, nameof(Lab.Id), nameof(Lab.Name), scoreboard?.LabId))" class="form-control">
                <option value="" selected>@Localizer["AllLabs"]</option>
            </select>
        </div>
        <div class="mb-3">
            <label class="form-label" for="input-slot-id">@Localizer["SelectSlot"]</label>
            <select id="input-slot-id" name="slotId" asp-items="@(new SelectList(slots, nameof(Slot.Id), nameof(Slot.Name), scoreboard?.SlotId))" class="form-control">
                <option value="" selected>@Localizer["AllSlots"]</option>
            </select>
        </div>
        @if(currentUser.IsAdmin || currentUser.IsTutor)
        {
            <div class="mb-3">
                <div class="form-check">
                    <input type="checkbox" id="input-showAllEntries" name="showAllEntries" class="form-check-input" value="true" checked="@(showAllEntries)">
                    <label for="input-showAllEntries" class="form-check-label">
                        @Localizer["ShowAllEntries"]
                        <i class="bi bi-star-fill" style="color: rgb(209, 166, 132);" title="@Localizer["TutorsAndAdminsOnly"]"></i>
                    </label>
                </div>
            </div>
        }
        @if(currentUser.IsAdmin)
        {
            <div class="mb-3">
                <div class="form-check">
                    <input type="checkbox" id="input-resetCache" name="resetCache" class="form-check-input" value="true" checked="@(resetCache)">
                    <label for="input-resetCache" class="form-check-label">
                        @Localizer["ResetCache"]
                        <i class="bi bi-star-fill" style="color: rgb(255, 204, 1);" title="@Localizer["AdminsOnly"]"></i>
                    </label>
                </div>
            </div>

            <div class="mb-3">
                <label class="form-label" for="input-reload">
                    @Localizer["AutoReload"]
                    <i class="bi bi-star-fill" style="color: rgb(255, 204, 1);" title="@Localizer["AdminsOnly"]"></i>
                </label>
                <input type="number" min="0" max="3600" name="reload" value="0" id="input-reload" class="form-control">
            </div>
        }
        <button type="submit" class="btn btn-primary">
            <i class="bi bi-arrow-return-right"></i>
            @Localizer["ShowSelectedScoreboard"]
        </button>
    </form>
</div>