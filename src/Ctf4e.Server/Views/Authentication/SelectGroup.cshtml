@using Ctf4e.Server.Services
@using Ctf4e.Server.Models
@using Microsoft.AspNetCore.Mvc.Localization
@using Microsoft.AspNetCore.Mvc.TagHelpers
@model Ctf4e.Server.ViewModels.GroupSelection
@inject IConfigurationService ConfigurationService
@inject IMarkdownService MarkdownService
@inject IViewLocalizer Localizer
@{
    ViewData["Title"] = Localizer["HtmlTitle"];

    var currentUser = (User)ViewData["CurrentUser"];

    var slots = (List<Slot>)ViewData["Slots"];
}

<div class="container">
    <h1 class="mt-4">
        @Localizer["Title"]
    </h1>
    <div class="header-rule"></div>

    @Html.Raw(MarkdownService.GetRenderedHtml(await ConfigurationService.GroupSelectionPageText.GetAsync(Context.RequestAborted)))

    @if(await ConfigurationService.GroupSizeMax.GetAsync(Context.RequestAborted) > 1)
    {
        <p>
            @Localizer["YourCode", currentUser.GroupFindingCode]
        </p>
    }

    <form asp-controller="Authentication" asp-action="HandleGroupSelection" method="post">  
        @if(await ConfigurationService.GroupSizeMax.GetAsync(Context.RequestAborted) > 1)
        {
            <div class="mb-3">
                <label class="form-label" asp-for="OtherUserCodes">@Localizer["Form:OtherUserCodes"]</label>
                <textarea asp-for="OtherUserCodes" class="form-control font-monospace" placeholder="Codes eingeben" rows="4" cols="40"></textarea>
                <small class="form-text text-muted">
                    @Localizer["Form:OtherUserCodes:Description"]
                </small>
                <span asp-validation-for="OtherUserCodes" class="text-danger"></span>
            </div>
        }
        <div class="mb-3">
            <label class="form-label" asp-for="SlotId">@Localizer["Form:SlotId"]</label>
            <select asp-for="SlotId" asp-items="@(new SelectList(slots, nameof(Slot.Id), nameof(Slot.Name)))" class="form-select"></select>
            <small class="form-text text-muted">
                @Localizer["Form:SlotId:Description"]
            </small>
        </div>
        <div class="mb-3">
            <label class="form-label" asp-for="DisplayName">@Localizer["Form:DisplayName"]</label>
            <input asp-for="DisplayName" class="form-control">
            <small class="form-text text-muted">
                @Localizer["Form:DisplayName:Description"]
            </small>
            <span asp-validation-for="DisplayName" class="text-danger"></span>
        </div>
        @if(await ConfigurationService.EnableScoreboard.GetAsync(Context.RequestAborted))
        {
            <div class="mb-3">
                <div class="form-check">
                    <input asp-for="ShowInScoreboard" class="form-check-input">
                    <label asp-for="ShowInScoreboard" class="form-check-label">@Localizer["Form:ShowInScoreboard"]</label>
                    <br>
                    <small class="form-text text-muted">
                        @Localizer["Form:ShowInScoreboard:Description"]
                    </small>
                </div>
            </div>
        }
        else
        {
            <input type="hidden" asp-for="ShowInScoreboard" value="false">
        }
        <p>
            @Localizer["Form:FinalText"]

        </p>

        <button type="submit" class="btn btn-primary @(currentUser.Group != null ? "disabled" : "")">@Localizer["Form:Submit"]</button>
    </form>
</div>