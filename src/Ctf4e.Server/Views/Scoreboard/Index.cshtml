@using Ctf4e.Server.Controllers
@using Ctf4e.Server.Models
@using Ctf4e.Server.ViewModels
@using Microsoft.AspNetCore.Mvc.Localization
@using Ctf4e.Server.Authorization
@using Ctf4e.Server.Services
@inject IViewLocalizer Localizer
@inject IUserService UserService;
@model Scoreboard
@{
    ViewData["Title"] = "Scoreboard";

    var labs = (List<Lab>)ViewData["Labs"];
    var slots = (List<Slot>)ViewData["Slots"];

    var viewFlags = (ScoreboardController.ViewFlags)ViewData["ViewFlags"];
    var showAllEntries = (viewFlags & ScoreboardController.ViewFlags.ShowAllEntries) != 0;
    var bypassCache = (viewFlags & ScoreboardController.ViewFlags.BypassCache) != 0;

    int autoReload = ViewData.ContainsKey("AutoReload") ? (int)ViewData["AutoReload"] : 0;
    
    var currentUser = (User)ViewData["CurrentUser"];

    // User list, only used when "show all entries" is set
    Dictionary<int, IEnumerable<User>> users = new();
    if(showAllEntries)
    {
        users = (await UserService.GetUsersAsync(Context.RequestAborted))
            .Where(u => u.GroupId != null)
            .GroupBy(u => u.GroupId)
            .ToDictionary(u => u.Key!.Value, u => u.Select(ug => ug));
    }
}

<div class="container">

    <div class="row mt-4 align-items-center">
        <div class="col">
            <h1 class="mb-0">
                @if(Model.AllLabs)
                {
                    @Localizer["Title:ScoreboardAll"]
                }
                else
                {
                    @Localizer["Title:ScoreboardLab", labs.First(l => l.Id == Model.LabId).Name]
                }
            </h1>
        </div>
        <div class="col-auto">
            <div class="dropdown">
                <button class="btn btn-sm btn-secondary dropdown-toggle" type="button" data-bs-toggle="dropdown" aria-expanded="false">
                    @Localizer["SelectScoreboard"]
                </button>
                <ul class="dropdown-menu dropdown-menu-end">
                    <li>
                        <a class="dropdown-item @(Model.AllLabs ? "fw-bold" : "")" asp-controller="Scoreboard" asp-action="RenderScoreboard" asp-route-labId="" asp-route-slotId="@Model.SlotId">
                            @Localizer["AllLabs"]
                        </a>
                    </li>
                    <li>
                        <hr class="dropdown-divider">
                    </li>
                    @foreach(var lab in labs)
                    {
                        if(!lab.Visible && !currentUser.Privileges.HasAnyPrivilege(UserPrivileges.ViewAdminScoreboard))
                        {
                            continue;
                        }

                        <li>
                            <a class="dropdown-item @(!lab.Visible ? "fst-italic" : "") @(Model.LabId == lab.Id ? "fw-bold" : "")" asp-controller="Scoreboard" asp-action="RenderScoreboard" asp-route-labId="@lab.Id" asp-route-slotId="@Model.SlotId">
                                @lab.Name
                                @if(!lab.Visible)
                                {
                                    <i class="bi bi-lock-fill" title="@Localizer["SelectScoreboard:HiddenLab"]"></i>
                                }
                            </a>
                        </li>
                    }
                </ul>
            </div>
        </div>
    </div> 
    @if(slots.Count > 1)
    {
        <div class="row mt-2 align-items-center">
            <div class="col">
                <h2 class="mb-0">
                    @if(Model.SlotId == null)
                    {
                        @Localizer["Title:AllSlots"]
                    }
                    else
                    {
                        @Localizer["Title:Slot", slots.First(s => s.Id == Model.SlotId).Name]
                    }
                </h2>
            </div>
            <div class="col-auto">
                <div class="dropdown">
                    <button class="btn btn-sm btn-secondary dropdown-toggle" type="button" data-bs-toggle="dropdown" aria-expanded="false">
                        @Localizer["SelectSlot"]
                    </button>
                    <ul class="dropdown-menu dropdown-menu-end">
                        <li>
                            <a class="dropdown-item @(Model.SlotId == null ? "fw-bold" : "")" asp-controller="Scoreboard" asp-action="RenderScoreboard" asp-route-labId="@(Model.AllLabs ? null : Model.LabId)" asp-route-slotId="">
                                @Localizer["AllSlots"]
                            </a>
                        </li>
                        <li>
                            <hr class="dropdown-divider">
                        </li>
                        @foreach(var slot in slots)
                        {
                            <li>
                                <a class="dropdown-item @(Model.SlotId == slot.Id ? "fw-bold" : "")" asp-controller="Scoreboard" asp-action="RenderScoreboard" asp-route-labId="@(Model.AllLabs ? null : Model.LabId)" asp-route-slotId="@slot.Id">
                                    @slot.Name
                                </a>
                            </li>
                        }
                    </ul>
                </div>
            </div>
        </div>
    }
    <hr class="header">

    <table class="table table-sm text-nowrap mt-4" id="flags-table">
        <thead>
        <tr>
            <th style="min-width: 5%;" scope="col">#</th>
            <th style="min-width: 10%;" scope="col">@Localizer["Scoreboard:Points"]</th>
            <th style="min-width: 10%;" scope="col">@Localizer["Scoreboard:Flags"]</th>
            <th style="min-width: 5%;" scope="col"></th>
            <th style="max-width: 70%;" scope="col">@Localizer["Scoreboard:Group"]</th>
            <th scope="col"></th>
            <th scope="col"></th>
        </tr>
        </thead>
        <tbody class="table-group-divider">
        @{
            int lastRank = 0;
            int entryCount = 0;
            bool currentGroupShown = false;
        }
        @foreach(var entry in Model.Entries)
        {
            if(entryCount >= Model.MaximumEntryCount && entry.Rank != lastRank && !showAllEntries)
            {
                break;
            }

            bool isCurrentGroup = entry.GroupId == currentUser.GroupId;
            currentGroupShown |= isCurrentGroup;
            <tr class="@(isCurrentGroup ? "table-active" : "")">
                <th scope="row">
                    @if(entry.Rank != lastRank)
                    {
                        @entry.Rank
                        @if(entry.Rank == 1)
                        {
                            <i class="bi bi-award-fill" style="color: rgb(255, 204, 1);"></i>
                        }
                        else if(entry.Rank == 2)
                        {
                            <i class="bi bi-award-fill" style="color: rgb(180, 184, 188);"></i>
                        }
                        else if(entry.Rank == 3)
                        {
                            <i class="bi bi-award-fill" style="color: rgb(209, 166, 132);"></i>
                        }
                    }
                </th>
                <td>
                    <span class="cursor-help" title="@Localizer["Scoreboard:LastSubmission", entry.LastSubmissionTime.ToString(DateTimeFormats.DateAndTimeSeconds)]">
                        @entry.TotalPoints
                    </span>
                    @if(isCurrentGroup && !showAllEntries)
                    {
                        <span class="text-muted">
                            @if(entry.BugBountyPoints == 0)
                            {
                                @Localizer["Scoreboard:DetailedPoints", entry.ExercisePoints, entry.FlagPoints]
                            }
                            else
                            {
                                @Localizer["Scoreboard:DetailedPointsWithBugs", entry.ExercisePoints, entry.FlagPoints, entry.BugBountyPoints]
                            }
                        </span>
                    }
                    @if(entry.BugBountyPoints > 0 && !Model.AllLabs)
                    {
                        <i class="bi bi-bug-fill text-primary" title="@Localizer["Scoreboard:GotBugBounty"]"></i>
                    }
                </td>
                <td>
                    @entry.FlagCount
                </td>
                <td>
                    @if(entry.GroupAnnotation != null)
                    {
                        <span title="@(entry.GroupAnnotationHoverText ?? "")" class="cursor-help">@entry.GroupAnnotation</span>
                    }
                </td>
                <td>
                    @if(showAllEntries)
                    {
                        // Offer tooltip with user names
                        string userNames = "";
                        foreach(var user in users[entry.GroupId])
                        {
                            if(userNames == "")
                                userNames = user.DisplayName;
                            else
                                userNames += ", " + user.DisplayName;
                        }

                        <span title="@userNames" class="cursor-help">
                            @entry.GroupName
                        </span>
                    }
                    else
                    {
                        @entry.GroupName
                    }
                </td>
                <td>
                    @if(showAllEntries)
                    {
                        <span class="badge bg-opacity-100 bg-secondary cursor-help" style="min-width: 3rem" title="@Localizer["Scoreboard:AllEntries:ExercisePoints"]">
                            @entry.ExercisePoints
                        </span>
                        <span class="badge bg-opacity-75 bg-secondary cursor-help" style="min-width: 3rem" title="@Localizer["Scoreboard:AllEntries:FlagPoints"]">
                            @entry.FlagPoints
                        </span>
                        @if(entry.BugBountyPoints != 0)
                        {
                            <span class="badge bg-opacity-75 bg-secondary cursor-help" style="min-width: 3rem" title="@Localizer["Scoreboard:AllEntries:BugBountyPoints"]">
                                @entry.BugBountyPoints
                            </span>
                        }
                    }
                </td>
                <td class="text-end">
                    @if(showAllEntries)
                    {
                        if(currentUser.Privileges.HasPrivileges(UserPrivileges.EditGroups))
                        {
                            <a asp-controller="AdminGroups" asp-action="ShowEditGroupForm" asp-route-id="@entry.GroupId" class="text-decoration-none" title="@Localizer["Scoreboard:EditGroup"]">
                                <i class="bi bi-pencil"></i>
                            </a>
                        }

                        if(currentUser.Privileges.HasPrivileges(UserPrivileges.ViewAdminScoreboard))
                        {
                            <a asp-controller="AdminScoreboard" asp-action="RenderScoreboard" asp-route-labId="@Model.LabId" asp-route-slotId="@Model.SlotId" asp-route-groupMode="true" asp-fragment="@("group" + entry.GroupId)" class="text-decoration-none" title="@Localizer["Scoreboard:AdminScoreboard:Group"]">
                                <i class="bi bi-bookmark-star"></i>
                            </a>
                        }
                    }
                </td>
            </tr>
            ++entryCount;
            lastRank = entry.Rank;
        }
        @if(!currentGroupShown && currentUser.GroupId != null)
        {
            var entry = Model.Entries.FirstOrDefault(e => e.GroupId == currentUser.GroupId);
            if(entry != null)
            {
                <tr class="table-active">
                    <th scope="row">
                        @entry.Rank
                    </th>
                    <td>
                        <span class="cursor-help" title="@Localizer["Scoreboard:LastSubmission", entry.LastSubmissionTime.ToString(DateTimeFormats.DateAndTimeSeconds)]">
                            @entry.TotalPoints
                        </span>
                        <span class="text-muted">
                            @if(entry.BugBountyPoints == 0)
                            {
                                @Localizer["Scoreboard:DetailedPoints", entry.ExercisePoints, entry.FlagPoints]
                            }
                            else
                            {
                                @Localizer["Scoreboard:DetailedPointsWithBugs", entry.ExercisePoints, entry.FlagPoints, entry.BugBountyPoints]
                            }
                        </span>
                        @if(entry.BugBountyPoints > 0 && !Model.AllLabs)
                        {
                            <i class="bi bi-bug-fill text-primary" title="@Localizer["Scoreboard:GotBugBounty"]"></i>
                        }
                    </td>
                    <td>
                        @entry.FlagCount
                    </td>
                    <td>
                        @if(entry.GroupAnnotation != null)
                        {
                            <span title="@(entry.GroupAnnotationHoverText ?? "")" class="cursor-help">@entry.GroupAnnotation</span>
                        }
                    </td>
                    <td>
                        @entry.GroupName
                    </td>
                    <td></td>
                    <td></td>
                </tr>
            }
        }
        </tbody>
    </table>

    @if(currentUser.Privileges.HasPrivileges(UserPrivileges.ViewAdminScoreboard))
    {
        <h2 class="mt-5">@Localizer["AdminFunctionality"]</h2>
        <hr class="header-secondary">

        <div class="mb-3">
            <div class="form-check form-switch">
                <input type="checkbox" class="form-check-input" id="show-all-entries-switch" checked="@showAllEntries">
                <label class="form-check-label" for="show-all-entries-switch">@Localizer["ViewFlags:ShowAllEntries"]</label>
            </div>

            <div class="form-check form-switch">
                <input type="checkbox" class="form-check-input" id="bypass-cache-switch" checked="@bypassCache">
                <label class="form-check-label" for="bypass-cache-switch">@Localizer["ViewFlags:BypassCache"]</label>
            </div>
        </div>

        <form asp-controller="Scoreboard" asp-action="RenderScoreboard" method="get" class="row mb-3">   
            <div class="col-12 col-sm">
                <input type="number" min="0" max="3600" step="5" name="reload" value="@autoReload" id="input-reload" class="form-control form-control-sm">
            </div>

            <div class="col-10 mt-2 mt-sm-0">
                <button type="submit" class="btn btn-sm btn-outline-primary">
                    <span class="bi bi-arrow-right"></span>
                    @Localizer["AutoReload"]
                </button>
            </div>           
            
            <input type="hidden" name="labId" value="@(Model.AllLabs ? "" : Model.LabId)">
            <input type="hidden" name="slotId" value="@Model.SlotId">
        </form>
    }
</div>

<script>
    window.addEventListener("load", function()
    {
        @if(currentUser.Privileges.HasPrivileges(UserPrivileges.ViewAdminScoreboard))
        {
            @:setupViewFlagSwitch("ScoreboardViewFlags", document.getElementById("show-all-entries-switch"), 1);
            @:setupViewFlagSwitch("ScoreboardViewFlags", document.getElementById("bypass-cache-switch"), 2);
        }
    });
</script>