@using Ctf4e.Utilities
@using Ctf4e.LabServer.Constants
@using Ctf4e.LabServer.Configuration
@{
    // Retrieve status messages
    var statusMessages = (List<(string Message, StatusMessageTypes Type)>)ViewData["StatusMessages"];

    string StatusMessageTypeToColor(StatusMessageTypes messageType)
    {
        switch(messageType)
        {
            case StatusMessageTypes.Info:
                return "alert-primary";
            case StatusMessageTypes.Success:
                return "alert-success";
            case StatusMessageTypes.Warning:
                return "alert-warning";
            case StatusMessageTypes.Error:
                return "alert-danger";
        }
        return "alert-secondary";
    }

    // User logged in?
    var currentUser = (User)ViewData["CurrentUser"];
    var adminMode = (bool)ViewData["AdminMode"];

    // Current menu item
    var activeMenuItem = (MenuItems)ViewData["ActiveMenuItem"];

    var labOptions = (LabOptions)ViewData["LabOptions"];
    var labConfiguration = (LabConfiguration)ViewData["LabConfiguration"];
}
<!DOCTYPE html>
<html lang="de">
<head>
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>@ViewData["Title"] - @labConfiguration.PageTitle</title>
    <link rel="icon" type="image/x-icon" href="~/favicon.ico">
    <link rel="stylesheet" href="~/lib/bootstrap/dist/css/bootstrap.min.css">
    <link rel="stylesheet" href="~/lib/open-iconic/css/open-iconic-bootstrap.min.css">
    <link rel="stylesheet" href="~/css/main.css">
    <script src="~/lib/jquery/js/jquery.min.js"></script>
    <script src="~/lib/bootstrap/dist/js/bootstrap.bundle.min.js"></script>
    @await RenderSectionAsync("ScriptsHead", required: false)
</head>
<body>
<header>
    <nav class="navbar navbar-expand navbar-light bg-light">
        <a class="navbar-brand" asp-controller="Group" asp-action="RenderPageAsync">
            <!--<img alt="logo" class="img-fluid" src="/img/logo.png" style="max-height: 50px;">-->
            @labConfiguration.NavbarTitle
        </a>
        <ul class="navbar-nav px-3 mr-auto">
            <li class="nav-item">
                <a class="nav-link" href="@(System.IO.Path.Combine(labOptions.CtfServerBaseUrl, "scoreboard"))">Scoreboard</a>
            </li>
            @if(currentUser != null)
            {
                <li class="nav-item">
                    <a class="nav-link" href="@(System.IO.Path.Combine(labOptions.CtfServerBaseUrl, "group"))">Gruppenstatus</a>
                </li>
                <li class="nav-item">
                    <a class="nav-link @(activeMenuItem == MenuItems.Authentication ? "text-primary" : "")" asp-controller="Group" asp-action="RenderPageAsync">Aufgaben</a>
                </li>
            }
        </ul>

        @if(currentUser != null && adminMode)
        {
            bool visitsAdminPage = activeMenuItem == MenuItems.AdminConfiguration;
            <ul class="navbar-nav px-3 ml-auto">
                <li class="nav-item dropdown @(visitsAdminPage ? "active" : "")">
                    <a class="nav-link dropdown-toggle" href="#" role="button" data-toggle="dropdown">
                        <span>Admin</span>
                    </a>
                    <div class="dropdown-menu mt-0">
                        <a class="dropdown-item @(activeMenuItem == MenuItems.AdminConfiguration ? "text-primary" : "")" asp-controller="AdminConfiguration" asp-action="RenderPageAsync">Konfiguration</a>
                    </div>
                </li>
            </ul>
        }

        @if(currentUser != null)
        {
            <span class="mr-2">
                Angemeldet als
                <strong>
                    @currentUser.UserDisplayName
                </strong>
                @if(adminMode)
                {
                    <span class="oi oi-star" style="color: rgb(255, 204, 1);" title="Administrator-Modus"></span>
                }
            </span>
            <a class="btn btn-sm btn-outline-primary mr-1" asp-controller="Authentication" asp-action="LogoutAsync">
                <span class="oi oi-account-logout"></span>
                Abmelden
            </a>
        }
    </nav>
</header>
<div class="container pb-2 pt-4">
    <main>
        @foreach(var statusMessage in statusMessages)
        {
            <div class="row mt-2">
                <div class="col-sm">
                    <div class="alert @StatusMessageTypeToColor(statusMessage.Type) alert-dismissible fade show" role="alert">
                        @switch(statusMessage.Type)
                        {
                            case StatusMessageTypes.Info:
                                <span class="oi oi-info mr-3"></span>
                                break;
                            case StatusMessageTypes.Success:
                                <span class="oi oi-check mr-3"></span>
                                break;
                            case StatusMessageTypes.Warning:
                                <span class="oi oi-warning mr-3"></span>
                                break;
                            case StatusMessageTypes.Error:
                                <span class="oi oi-x mr-3"></span>
                                break;
                        }

                        @statusMessage.Message
                        <button type="button" class="close" data-dismiss="alert">
                            <span>&times;</span>
                        </button>
                    </div>
                </div>
            </div>
        }
        @RenderBody()
    </main>
</div>

<footer class="border-top footer text-muted">
    <div class="container">
        <div class="row">
            <div class="col">
                Powered by <a href="https://github.com/JanWichelmann/ctf4e">CTF4E</a>
            </div>
        </div>
    </div>
</footer>
@await RenderSectionAsync("ScriptsBody", required: false)
</body>
</html>