@using Ctf4e.LabServer.Options
@using Ctf4e.LabServer.ViewModels
@{
    ViewData["Title"] = "Lösungen einreichen";

    var groupScoreboard = (UserScoreboard)ViewData["Scoreboard"];
    var adminMode = (bool)ViewData["AdminMode"];
}

<h3 class="text-primary">
    Lösungen einreichen
</h3>
<hr class="bg-primary" style="height: 2px;">

<table class="table table-striped table-sm">
    <thead>
    <tr>
        <th></th>
        <th scope="col">Aufgabe</th>
        <th scope="col"></th>
        @if(adminMode)
        {
            <th scope="col">Admin</th>
        }
    </tr>
    </thead>
    <tbody>
    @foreach(var exercise in groupScoreboard.Exercises)
    {
        <tr>
            <td>
                @if(exercise.Solved)
                {
                    <span class="oi oi-circle-check text-success align-middle" title="Aufgabe gelöst"></span>
                }
                else if(exercise.SolvedByGroupMember)
                {
                    <span class="oi oi-circle-check text-secondary align-middle" title="Aufgabe von Gruppenmitglied gelöst"></span>
                }
            </td>
            <td>
                @if(string.IsNullOrEmpty(exercise.Exercise.Link)) // "IsNullOrEmpty" is a used as a workaround for https://github.com/dotnet/runtime/issues/36510
                {
                    @exercise.Exercise.Title
                }
                else
                {
                    <a href="@exercise.Exercise.Link" target="_blank">@exercise.Exercise.Title</a>
                }
                @if(!string.IsNullOrEmpty(exercise.Description))
                {
                    <br>
                    <span class="text-muted">@Html.Raw(exercise.Description)</span>
                }
                @if(exercise.Solved && !string.IsNullOrEmpty(exercise.Exercise.FlagCode))
                {
                    <br>
                    <span class="text-monospace">@exercise.Exercise.FlagCode</span>
                }
            </td>
            <td class="align-middle">
                <form class="form-inline" method="post" asp-controller="Group" asp-action="CheckInputAsync">
                    <input type="hidden" name="exerciseId" value="@exercise.Exercise.Id">
                    <input type="text" class="form-control text-monospace mr-2" name="input" placeholder="Lösung eingeben">

                    <button type="submit" class="btn btn-primary">
                        Überprüfen
                    </button>
                </form>
            </td>
            @if(adminMode)
            {
                <td class="align-middle">
                    <a role="button" class="btn btn-success" href="#" data-toggle="modal" data-target="#modal-mark-exercise-solved" data-exercise-id="@exercise.Exercise.Id" data-exercise-name="@exercise.Exercise.Title">
                        <span class="oi oi-check"></span>
                        Lösen
                        <span class="oi oi-star"></span>
                    </a>
                    <a role="button" class="btn btn-danger" href="#" data-toggle="modal" data-target="#modal-reset-exercise" data-exercise-id="@exercise.Exercise.Id" data-exercise-name="@exercise.Exercise.Title">
                        <span class="oi oi-action-undo"></span>
                        Zurücksetzen
                        <span class="oi oi-star"></span>
                    </a>
                </td>
            }
        </tr>
    }
    </tbody>
</table>

@if(adminMode)
{
    <div class="modal fade" id="modal-mark-exercise-solved" tabindex="-1" role="dialog">
        <div class="modal-dialog" role="document">
            <div class="modal-content">
                <form asp-controller="Group" asp-action="MarkExerciseAsSolvedAsync" method="post">
                    <div class="modal-header">
                        <h5 class="modal-title">Aufgabe als gelöst markieren</h5>
                        <button type="button" class="close" data-dismiss="modal">
                            <span>&times;</span>
                        </button>
                    </div>
                    <div class="modal-body">
                        <p>
                            Soll die Aufgabe <span class="font-weight-bold" data-replace="exercise-name"></span> wirklich als gelöst markiert werden?
                        </p>
                        <p>
                            Hinweis: Dies löst ebenfalls eine Benachrichtigung an das CTF-System aus.
                        </p>
                    </div>
                    <div class="modal-footer">
                        <input type="hidden" name="exerciseId" data-replace="exercise-id">
                        @Html.AntiForgeryToken()
                        <button type="submit" class="btn btn-outline-success">Lösen</button>
                        <button type="button" class="btn btn-secondary" data-dismiss="modal">Abbrechen</button>
                    </div>
                </form>
            </div>
        </div>
    </div>
    <div class="modal fade" id="modal-reset-exercise" tabindex="-1" role="dialog">
        <div class="modal-dialog" role="document">
            <div class="modal-content">
                <form asp-controller="Group" asp-action="ResetExerciseStatusAsync" method="post">
                    <div class="modal-header">
                        <h5 class="modal-title">Aufgabe zurücksetzen</h5>
                        <button type="button" class="close" data-dismiss="modal">
                            <span>&times;</span>
                        </button>
                    </div>
                    <div class="modal-body">
                        <p>
                            Soll die Aufgabe <span class="font-weight-bold" data-replace="exercise-name"></span> wirklich zurückgesetzt werden?
                        </p>
                        <p>
                            Hinweis: Dies setzt lediglich den Status der Aufgabe auf diesem Server zurück; 
                            existierende Einreichungen im CTF-System bleiben unberührt und müssen manuell gelöscht werden.
                        </p>
                    </div>
                    <div class="modal-footer">
                        <input type="hidden" name="exerciseId" data-replace="exercise-id">
                        @Html.AntiForgeryToken()
                        <button type="submit" class="btn btn-outline-danger">Zurücksetzen</button>
                        <button type="button" class="btn btn-secondary" data-dismiss="modal">Abbrechen</button>
                    </div>
                </form>
            </div>
        </div>
    </div>
    <script>
        $('#modal-mark-exercise-solved').on('show.bs.modal', function (e) {
            var exerciseId = $(e.relatedTarget).data('exercise-id');
            var exerciseName = $(e.relatedTarget).data('exercise-name');
            $(e.currentTarget).find('input[data-replace="exercise-id"]').val(exerciseId);
            $(e.currentTarget).find('span[data-replace="exercise-name"]').text(exerciseName);
        });
        $('#modal-reset-exercise').on('show.bs.modal', function (e) {
            var exerciseId = $(e.relatedTarget).data('exercise-id');
            var exerciseName = $(e.relatedTarget).data('exercise-name');
            $(e.currentTarget).find('input[data-replace="exercise-id"]').val(exerciseId);
            $(e.currentTarget).find('span[data-replace="exercise-name"]').text(exerciseName);
        });
    </script>
}